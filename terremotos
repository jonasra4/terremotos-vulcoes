{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"Trabalho 2 unidade","version":"0.3.2","provenance":[],"collapsed_sections":[],"toc_visible":true},"kernelspec":{"display_name":"Python 3","language":"python","name":"python3"}},"cells":[{"metadata":{"id":"tAJ6HrfadtR0","colab_type":"text"},"cell_type":"markdown","source":["# Dataset"]},{"metadata":{"id":"72eAeI10bxAi","colab_type":"code","colab":{"resources":{"http://localhost:8080/nbextensions/google.colab/files.js":{"data":"Ly8gQ29weXJpZ2h0IDIwMTcgR29vZ2xlIExMQwovLwovLyBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgIkxpY2Vuc2UiKTsKLy8geW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLgovLyBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXQKLy8KLy8gICAgICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjAKLy8KLy8gVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZQovLyBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiAiQVMgSVMiIEJBU0lTLAovLyBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC4KLy8gU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZAovLyBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS4KCi8qKgogKiBAZmlsZW92ZXJ2aWV3IEhlbHBlcnMgZm9yIGdvb2dsZS5jb2xhYiBQeXRob24gbW9kdWxlLgogKi8KKGZ1bmN0aW9uKHNjb3BlKSB7CmZ1bmN0aW9uIHNwYW4odGV4dCwgc3R5bGVBdHRyaWJ1dGVzID0ge30pIHsKICBjb25zdCBlbGVtZW50ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnc3BhbicpOwogIGVsZW1lbnQudGV4dENvbnRlbnQgPSB0ZXh0OwogIGZvciAoY29uc3Qga2V5IG9mIE9iamVjdC5rZXlzKHN0eWxlQXR0cmlidXRlcykpIHsKICAgIGVsZW1lbnQuc3R5bGVba2V5XSA9IHN0eWxlQXR0cmlidXRlc1trZXldOwogIH0KICByZXR1cm4gZWxlbWVudDsKfQoKLy8gTWF4IG51bWJlciBvZiBieXRlcyB3aGljaCB3aWxsIGJlIHVwbG9hZGVkIGF0IGEgdGltZS4KY29uc3QgTUFYX1BBWUxPQURfU0laRSA9IDEwMCAqIDEwMjQ7Ci8vIE1heCBhbW91bnQgb2YgdGltZSB0byBibG9jayB3YWl0aW5nIGZvciB0aGUgdXNlci4KY29uc3QgRklMRV9DSEFOR0VfVElNRU9VVF9NUyA9IDMwICogMTAwMDsKCmZ1bmN0aW9uIF91cGxvYWRGaWxlcyhpbnB1dElkLCBvdXRwdXRJZCkgewogIGNvbnN0IHN0ZXBzID0gdXBsb2FkRmlsZXNTdGVwKGlucHV0SWQsIG91dHB1dElkKTsKICBjb25zdCBvdXRwdXRFbGVtZW50ID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQob3V0cHV0SWQpOwogIC8vIENhY2hlIHN0ZXBzIG9uIHRoZSBvdXRwdXRFbGVtZW50IHRvIG1ha2UgaXQgYXZhaWxhYmxlIGZvciB0aGUgbmV4dCBjYWxsCiAgLy8gdG8gdXBsb2FkRmlsZXNDb250aW51ZSBmcm9tIFB5dGhvbi4KICBvdXRwdXRFbGVtZW50LnN0ZXBzID0gc3RlcHM7CgogIHJldHVybiBfdXBsb2FkRmlsZXNDb250aW51ZShvdXRwdXRJZCk7Cn0KCi8vIFRoaXMgaXMgcm91Z2hseSBhbiBhc3luYyBnZW5lcmF0b3IgKG5vdCBzdXBwb3J0ZWQgaW4gdGhlIGJyb3dzZXIgeWV0KSwKLy8gd2hlcmUgdGhlcmUgYXJlIG11bHRpcGxlIGFzeW5jaHJvbm91cyBzdGVwcyBhbmQgdGhlIFB5dGhvbiBzaWRlIGlzIGdvaW5nCi8vIHRvIHBvbGwgZm9yIGNvbXBsZXRpb24gb2YgZWFjaCBzdGVwLgovLyBUaGlzIHVzZXMgYSBQcm9taXNlIHRvIGJsb2NrIHRoZSBweXRob24gc2lkZSBvbiBjb21wbGV0aW9uIG9mIGVhY2ggc3RlcCwKLy8gdGhlbiBwYXNzZXMgdGhlIHJlc3VsdCBvZiB0aGUgcHJldmlvdXMgc3RlcCBhcyB0aGUgaW5wdXQgdG8gdGhlIG5leHQgc3RlcC4KZnVuY3Rpb24gX3VwbG9hZEZpbGVzQ29udGludWUob3V0cHV0SWQpIHsKICBjb25zdCBvdXRwdXRFbGVtZW50ID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQob3V0cHV0SWQpOwogIGNvbnN0IHN0ZXBzID0gb3V0cHV0RWxlbWVudC5zdGVwczsKCiAgY29uc3QgbmV4dCA9IHN0ZXBzLm5leHQob3V0cHV0RWxlbWVudC5sYXN0UHJvbWlzZVZhbHVlKTsKICByZXR1cm4gUHJvbWlzZS5yZXNvbHZlKG5leHQudmFsdWUucHJvbWlzZSkudGhlbigodmFsdWUpID0+IHsKICAgIC8vIENhY2hlIHRoZSBsYXN0IHByb21pc2UgdmFsdWUgdG8gbWFrZSBpdCBhdmFpbGFibGUgdG8gdGhlIG5leHQKICAgIC8vIHN0ZXAgb2YgdGhlIGdlbmVyYXRvci4KICAgIG91dHB1dEVsZW1lbnQubGFzdFByb21pc2VWYWx1ZSA9IHZhbHVlOwogICAgcmV0dXJuIG5leHQudmFsdWUucmVzcG9uc2U7CiAgfSk7Cn0KCi8qKgogKiBHZW5lcmF0b3IgZnVuY3Rpb24gd2hpY2ggaXMgY2FsbGVkIGJldHdlZW4gZWFjaCBhc3luYyBzdGVwIG9mIHRoZSB1cGxvYWQKICogcHJvY2Vzcy4KICogQHBhcmFtIHtzdHJpbmd9IGlucHV0SWQgRWxlbWVudCBJRCBvZiB0aGUgaW5wdXQgZmlsZSBwaWNrZXIgZWxlbWVudC4KICogQHBhcmFtIHtzdHJpbmd9IG91dHB1dElkIEVsZW1lbnQgSUQgb2YgdGhlIG91dHB1dCBkaXNwbGF5LgogKiBAcmV0dXJuIHshSXRlcmFibGU8IU9iamVjdD59IEl0ZXJhYmxlIG9mIG5leHQgc3RlcHMuCiAqLwpmdW5jdGlvbiogdXBsb2FkRmlsZXNTdGVwKGlucHV0SWQsIG91dHB1dElkKSB7CiAgY29uc3QgaW5wdXRFbGVtZW50ID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoaW5wdXRJZCk7CiAgaW5wdXRFbGVtZW50LmRpc2FibGVkID0gZmFsc2U7CgogIGNvbnN0IG91dHB1dEVsZW1lbnQgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChvdXRwdXRJZCk7CiAgb3V0cHV0RWxlbWVudC5pbm5lckhUTUwgPSAnJzsKCiAgY29uc3QgcGlja2VkUHJvbWlzZSA9IG5ldyBQcm9taXNlKChyZXNvbHZlKSA9PiB7CiAgICBpbnB1dEVsZW1lbnQuYWRkRXZlbnRMaXN0ZW5lcignY2hhbmdlJywgKGUpID0+IHsKICAgICAgcmVzb2x2ZShlLnRhcmdldC5maWxlcyk7CiAgICB9KTsKICB9KTsKCiAgY29uc3QgY2FuY2VsID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnYnV0dG9uJyk7CiAgaW5wdXRFbGVtZW50LnBhcmVudEVsZW1lbnQuYXBwZW5kQ2hpbGQoY2FuY2VsKTsKICBjYW5jZWwudGV4dENvbnRlbnQgPSAnQ2FuY2VsIHVwbG9hZCc7CiAgY29uc3QgY2FuY2VsUHJvbWlzZSA9IG5ldyBQcm9taXNlKChyZXNvbHZlKSA9PiB7CiAgICBjYW5jZWwub25jbGljayA9ICgpID0+IHsKICAgICAgcmVzb2x2ZShudWxsKTsKICAgIH07CiAgfSk7CgogIC8vIENhbmNlbCB1cGxvYWQgaWYgdXNlciBoYXNuJ3QgcGlja2VkIGFueXRoaW5nIGluIHRpbWVvdXQuCiAgY29uc3QgdGltZW91dFByb21pc2UgPSBuZXcgUHJvbWlzZSgocmVzb2x2ZSkgPT4gewogICAgc2V0VGltZW91dCgoKSA9PiB7CiAgICAgIHJlc29sdmUobnVsbCk7CiAgICB9LCBGSUxFX0NIQU5HRV9USU1FT1VUX01TKTsKICB9KTsKCiAgLy8gV2FpdCBmb3IgdGhlIHVzZXIgdG8gcGljayB0aGUgZmlsZXMuCiAgY29uc3QgZmlsZXMgPSB5aWVsZCB7CiAgICBwcm9taXNlOiBQcm9taXNlLnJhY2UoW3BpY2tlZFByb21pc2UsIHRpbWVvdXRQcm9taXNlLCBjYW5jZWxQcm9taXNlXSksCiAgICByZXNwb25zZTogewogICAgICBhY3Rpb246ICdzdGFydGluZycsCiAgICB9CiAgfTsKCiAgaWYgKCFmaWxlcykgewogICAgcmV0dXJuIHsKICAgICAgcmVzcG9uc2U6IHsKICAgICAgICBhY3Rpb246ICdjb21wbGV0ZScsCiAgICAgIH0KICAgIH07CiAgfQoKICBjYW5jZWwucmVtb3ZlKCk7CgogIC8vIERpc2FibGUgdGhlIGlucHV0IGVsZW1lbnQgc2luY2UgZnVydGhlciBwaWNrcyBhcmUgbm90IGFsbG93ZWQuCiAgaW5wdXRFbGVtZW50LmRpc2FibGVkID0gdHJ1ZTsKCiAgZm9yIChjb25zdCBmaWxlIG9mIGZpbGVzKSB7CiAgICBjb25zdCBsaSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2xpJyk7CiAgICBsaS5hcHBlbmQoc3BhbihmaWxlLm5hbWUsIHtmb250V2VpZ2h0OiAnYm9sZCd9KSk7CiAgICBsaS5hcHBlbmQoc3BhbigKICAgICAgICBgKCR7ZmlsZS50eXBlIHx8ICduL2EnfSkgLSAke2ZpbGUuc2l6ZX0gYnl0ZXMsIGAgKwogICAgICAgIGBsYXN0IG1vZGlmaWVkOiAkewogICAgICAgICAgICBmaWxlLmxhc3RNb2RpZmllZERhdGUgPyBmaWxlLmxhc3RNb2RpZmllZERhdGUudG9Mb2NhbGVEYXRlU3RyaW5nKCkgOgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAnbi9hJ30gLSBgKSk7CiAgICBjb25zdCBwZXJjZW50ID0gc3BhbignMCUgZG9uZScpOwogICAgbGkuYXBwZW5kQ2hpbGQocGVyY2VudCk7CgogICAgb3V0cHV0RWxlbWVudC5hcHBlbmRDaGlsZChsaSk7CgogICAgY29uc3QgZmlsZURhdGFQcm9taXNlID0gbmV3IFByb21pc2UoKHJlc29sdmUpID0+IHsKICAgICAgY29uc3QgcmVhZGVyID0gbmV3IEZpbGVSZWFkZXIoKTsKICAgICAgcmVhZGVyLm9ubG9hZCA9IChlKSA9PiB7CiAgICAgICAgcmVzb2x2ZShlLnRhcmdldC5yZXN1bHQpOwogICAgICB9OwogICAgICByZWFkZXIucmVhZEFzQXJyYXlCdWZmZXIoZmlsZSk7CiAgICB9KTsKICAgIC8vIFdhaXQgZm9yIHRoZSBkYXRhIHRvIGJlIHJlYWR5LgogICAgbGV0IGZpbGVEYXRhID0geWllbGQgewogICAgICBwcm9taXNlOiBmaWxlRGF0YVByb21pc2UsCiAgICAgIHJlc3BvbnNlOiB7CiAgICAgICAgYWN0aW9uOiAnY29udGludWUnLAogICAgICB9CiAgICB9OwoKICAgIC8vIFVzZSBhIGNodW5rZWQgc2VuZGluZyB0byBhdm9pZCBtZXNzYWdlIHNpemUgbGltaXRzLiBTZWUgYi82MjExNTY2MC4KICAgIGxldCBwb3NpdGlvbiA9IDA7CiAgICB3aGlsZSAocG9zaXRpb24gPCBmaWxlRGF0YS5ieXRlTGVuZ3RoKSB7CiAgICAgIGNvbnN0IGxlbmd0aCA9IE1hdGgubWluKGZpbGVEYXRhLmJ5dGVMZW5ndGggLSBwb3NpdGlvbiwgTUFYX1BBWUxPQURfU0laRSk7CiAgICAgIGNvbnN0IGNodW5rID0gbmV3IFVpbnQ4QXJyYXkoZmlsZURhdGEsIHBvc2l0aW9uLCBsZW5ndGgpOwogICAgICBwb3NpdGlvbiArPSBsZW5ndGg7CgogICAgICBjb25zdCBiYXNlNjQgPSBidG9hKFN0cmluZy5mcm9tQ2hhckNvZGUuYXBwbHkobnVsbCwgY2h1bmspKTsKICAgICAgeWllbGQgewogICAgICAgIHJlc3BvbnNlOiB7CiAgICAgICAgICBhY3Rpb246ICdhcHBlbmQnLAogICAgICAgICAgZmlsZTogZmlsZS5uYW1lLAogICAgICAgICAgZGF0YTogYmFzZTY0LAogICAgICAgIH0sCiAgICAgIH07CiAgICAgIHBlcmNlbnQudGV4dENvbnRlbnQgPQogICAgICAgICAgYCR7TWF0aC5yb3VuZCgocG9zaXRpb24gLyBmaWxlRGF0YS5ieXRlTGVuZ3RoKSAqIDEwMCl9JSBkb25lYDsKICAgIH0KICB9CgogIC8vIEFsbCBkb25lLgogIHlpZWxkIHsKICAgIHJlc3BvbnNlOiB7CiAgICAgIGFjdGlvbjogJ2NvbXBsZXRlJywKICAgIH0KICB9Owp9CgpzY29wZS5nb29nbGUgPSBzY29wZS5nb29nbGUgfHwge307CnNjb3BlLmdvb2dsZS5jb2xhYiA9IHNjb3BlLmdvb2dsZS5jb2xhYiB8fCB7fTsKc2NvcGUuZ29vZ2xlLmNvbGFiLl9maWxlcyA9IHsKICBfdXBsb2FkRmlsZXMsCiAgX3VwbG9hZEZpbGVzQ29udGludWUsCn07Cn0pKHNlbGYpOwo=","ok":true,"headers":[["content-type","application/javascript"]],"status":200,"status_text":"OK"}},"base_uri":"https://localhost:8080/","height":257},"outputId":"f54cec85-02be-456a-ee8e-166fb260d9a4","executionInfo":{"status":"ok","timestamp":1540795158454,"user_tz":180,"elapsed":32838,"user":{"displayName":"natalia brito","photoUrl":"https://lh5.googleusercontent.com/-R88XQR2c4H4/AAAAAAAAAAI/AAAAAAAAANs/MrBMmeqpMNE/s64/photo.jpg","userId":"00706747172851300870"}}},"cell_type":"code","source":["# Uploading files from your local file system\n","\n","from google.colab import files\n","uploaded = files.upload()\n","for fn in uploaded.keys():\n","  print('User uploaded file \"{name}\" with length {length} bytes'.format(\n","      name=fn, length=len(uploaded[fn])))"],"execution_count":5,"outputs":[{"output_type":"display_data","data":{"text/html":["\n","     <input type=\"file\" id=\"files-78c0a611-c823-49c5-92ce-afd81237f901\" name=\"files[]\" multiple disabled />\n","     <output id=\"result-78c0a611-c823-49c5-92ce-afd81237f901\">\n","      Upload widget is only available when the cell has been executed in the\n","      current browser session. Please rerun this cell to enable.\n","      </output>\n","      <script src=\"/nbextensions/google.colab/files.js\"></script> "],"text/plain":["<IPython.core.display.HTML object>"]},"metadata":{"tags":[]}},{"output_type":"stream","text":["Saving countryMap.txt to countryMap (1).txt\n","Saving plotly_countries_and_codes.csv to plotly_countries_and_codes (3).csv\n","Saving terremotos2.csv to terremotos2 (2).csv\n","Saving volcano_data_2010.csv to volcano_data_2010 (4).csv\n","User uploaded file \"countryMap.txt\" with length 4922 bytes\n","User uploaded file \"plotly_countries_and_codes.csv\" with length 4736 bytes\n","User uploaded file \"terremotos2.csv\" with length 2397103 bytes\n","User uploaded file \"volcano_data_2010.csv\" with length 7998 bytes\n"],"name":"stdout"}]},{"metadata":{"id":"bXvjbjI4q1qA","colab_type":"text"},"cell_type":"markdown","source":["O Dataset [terremotos.csv](https://www.kaggle.com/usgs/earthquake-database) utilizado neste notebook contem informações sobre terremotos que chamaram atenção globalmente no período de 1965 até 2016. Ele possui 21 colunas e 23412 linhas.\n","\n","### Descrição das colunas \n","\n","| Coluna | Tipo | Formato |\n","|----------------------------|---------|--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|\n","| Date | Date | mm/dd/aaaa |\n","| Time | Date | hh:mm:ss |\n","| Latitude | Numeric |  |\n","| Longitude | Numeric |  |\n","| Type | String | 'Earthquake', 'Nuclear Explosion', 'Explosion', 'Rock Burst' |\n","| Depth | Numeric |  |\n","| Depth Error | String |  |\n","| Depth Seismic Stations | String |  |\n","| Magnitude | Numeric |  |\n","| Magnitude Type | String | 'MW', 'ML', 'MH', 'MS', 'MB', 'MWC', 'MD', nan, 'MWB', 'MWW', 'MWR' |\n","| Magnitude Error | String |  |\n","| Magnitude Seismic Stations | String |  |\n","| Azimuthal Gap | String |  |\n","| Horizontal Distance | String |  |\n","| Horizontal Error | String |  |\n","| Root Mean Square | String |  |\n","| ID | String |  |\n","| Source | String |  |\n","| Location Source | String |  |\n","| Magnitude Source | String |  |\n","| Status | String | 'Automatic', 'Reviewed' |\n","\n","#### Valores da coluna _Magnitude Type_ \n","- ML: Local (Richter) magnitude;\n","- MS: surface wave magnitude scale; \n","- MB (Mb): Body wave magnitude scale;\n","- MW (Mw): Moment magnitude scale; \n","- MD (Md): Duration magnitude/signal duration;\n","- MD (Md): Duration magnitude/signal duration;"]},{"metadata":{"id":"j7cWXj9GOfqV","colab_type":"code","colab":{}},"cell_type":"code","source":["#Importando o que será utilizado\n","\n","import pandas as pd\n","import numpy as np\n","import matplotlib.pyplot as plt"],"execution_count":0,"outputs":[]},{"metadata":{"id":"KLN1LEVKOfqn","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":290},"outputId":"169af9b7-8b5a-496c-c37d-f5df33432173","executionInfo":{"status":"ok","timestamp":1540795253998,"user_tz":180,"elapsed":554,"user":{"displayName":"natalia brito","photoUrl":"https://lh5.googleusercontent.com/-R88XQR2c4H4/AAAAAAAAAAI/AAAAAAAAANs/MrBMmeqpMNE/s64/photo.jpg","userId":"00706747172851300870"}}},"cell_type":"code","source":["terremotos = pd.read_csv(\"terremotos2.csv\", encoding='latin-1')\n","terremotos.head()"],"execution_count":8,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Date</th>\n","      <th>Time</th>\n","      <th>Latitude</th>\n","      <th>Longitude</th>\n","      <th>Type</th>\n","      <th>Depth</th>\n","      <th>Depth Error</th>\n","      <th>Depth Seismic Stations</th>\n","      <th>Magnitude</th>\n","      <th>Magnitude Type</th>\n","      <th>...</th>\n","      <th>Magnitude Seismic Stations</th>\n","      <th>Azimuthal Gap</th>\n","      <th>Horizontal Distance</th>\n","      <th>Horizontal Error</th>\n","      <th>Root Mean Square</th>\n","      <th>ID</th>\n","      <th>Source</th>\n","      <th>Location Source</th>\n","      <th>Magnitude Source</th>\n","      <th>Status</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>01/02/1965</td>\n","      <td>13:44:18</td>\n","      <td>19.246</td>\n","      <td>145.616</td>\n","      <td>Earthquake</td>\n","      <td>131.6</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>6.0</td>\n","      <td>MW</td>\n","      <td>...</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>ISCGEM860706</td>\n","      <td>ISCGEM</td>\n","      <td>ISCGEM</td>\n","      <td>ISCGEM</td>\n","      <td>Automatic</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>01/04/1965</td>\n","      <td>11:29:49</td>\n","      <td>1.863</td>\n","      <td>127.352</td>\n","      <td>Earthquake</td>\n","      <td>80.0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>5.8</td>\n","      <td>MW</td>\n","      <td>...</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>ISCGEM860737</td>\n","      <td>ISCGEM</td>\n","      <td>ISCGEM</td>\n","      <td>ISCGEM</td>\n","      <td>Automatic</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>01/05/1965</td>\n","      <td>18:05:58</td>\n","      <td>-20.579</td>\n","      <td>-173.972</td>\n","      <td>Earthquake</td>\n","      <td>20.0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>6.2</td>\n","      <td>MW</td>\n","      <td>...</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>ISCGEM860762</td>\n","      <td>ISCGEM</td>\n","      <td>ISCGEM</td>\n","      <td>ISCGEM</td>\n","      <td>Automatic</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>01/08/1965</td>\n","      <td>18:49:43</td>\n","      <td>-59.076</td>\n","      <td>-23.557</td>\n","      <td>Earthquake</td>\n","      <td>15.0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>5.8</td>\n","      <td>MW</td>\n","      <td>...</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>ISCGEM860856</td>\n","      <td>ISCGEM</td>\n","      <td>ISCGEM</td>\n","      <td>ISCGEM</td>\n","      <td>Automatic</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>01/09/1965</td>\n","      <td>13:32:50</td>\n","      <td>11.938</td>\n","      <td>126.427</td>\n","      <td>Earthquake</td>\n","      <td>15.0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>5.8</td>\n","      <td>MW</td>\n","      <td>...</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>ISCGEM860890</td>\n","      <td>ISCGEM</td>\n","      <td>ISCGEM</td>\n","      <td>ISCGEM</td>\n","      <td>Automatic</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>5 rows × 21 columns</p>\n","</div>"],"text/plain":["         Date      Time  Latitude  Longitude        Type  Depth  Depth Error  \\\n","0  01/02/1965  13:44:18    19.246    145.616  Earthquake  131.6          NaN   \n","1  01/04/1965  11:29:49     1.863    127.352  Earthquake   80.0          NaN   \n","2  01/05/1965  18:05:58   -20.579   -173.972  Earthquake   20.0          NaN   \n","3  01/08/1965  18:49:43   -59.076    -23.557  Earthquake   15.0          NaN   \n","4  01/09/1965  13:32:50    11.938    126.427  Earthquake   15.0          NaN   \n","\n","   Depth Seismic Stations  Magnitude Magnitude Type    ...      \\\n","0                     NaN        6.0             MW    ...       \n","1                     NaN        5.8             MW    ...       \n","2                     NaN        6.2             MW    ...       \n","3                     NaN        5.8             MW    ...       \n","4                     NaN        5.8             MW    ...       \n","\n","   Magnitude Seismic Stations  Azimuthal Gap  Horizontal Distance  \\\n","0                         NaN            NaN                  NaN   \n","1                         NaN            NaN                  NaN   \n","2                         NaN            NaN                  NaN   \n","3                         NaN            NaN                  NaN   \n","4                         NaN            NaN                  NaN   \n","\n","   Horizontal Error  Root Mean Square            ID  Source Location Source  \\\n","0               NaN               NaN  ISCGEM860706  ISCGEM          ISCGEM   \n","1               NaN               NaN  ISCGEM860737  ISCGEM          ISCGEM   \n","2               NaN               NaN  ISCGEM860762  ISCGEM          ISCGEM   \n","3               NaN               NaN  ISCGEM860856  ISCGEM          ISCGEM   \n","4               NaN               NaN  ISCGEM860890  ISCGEM          ISCGEM   \n","\n","  Magnitude Source     Status  \n","0           ISCGEM  Automatic  \n","1           ISCGEM  Automatic  \n","2           ISCGEM  Automatic  \n","3           ISCGEM  Automatic  \n","4           ISCGEM  Automatic  \n","\n","[5 rows x 21 columns]"]},"metadata":{"tags":[]},"execution_count":8}]},{"metadata":{"id":"7uGNBaR90cbm","colab_type":"text"},"cell_type":"markdown","source":["# Tratando os dados \n","\n","(LARISSA)\n","\n","Para garantir a coesão dos dados e permitir que possamos utilizá-los em nossas análises, realizamos as seguintes alterações:\n","\n","- Ajuste nos nomes das colunas para caracteres minúsculos;\n","- Ajuste nos nomes das colunas alterando-os para o formato \"*snake_case*\";\n","- Ajuste da coluna \"*date*\", para que possamos utilizar os dados das datas dos terremotos;\n","- Ajuste da coluna \"*time*\", para que possamos utilizar os dados dos horários dos terremotos.\n","\n","\n","Durante a limpeza do Dataframe, encontramos nas linhas \"3378\", \"7512\" e \"20650\" dados mal formatados. Portanto, para deixá-los em conformidade com o restante das informações realizamos as alterações diretamente nas linhas com má formatação. \n","\n"]},{"metadata":{"id":"28TunhF_mMpH","colab_type":"code","colab":{}},"cell_type":"code","source":["from datetime import datetime\n","import time\n","\n","#Alterando o nome das colunas\n","terremotos.columns = terremotos.columns.str.strip().str.lower().str.replace(' ', '_').str.replace('(', '').str.replace(')', '')\n","\n","#Datas\n","terremotos['date'] = pd.to_datetime(terremotos['date'], infer_datetime_format=True)\n","\n","\n","#Tempo\n","terremotos['time'][3378] = \"02:58:41\"  #Essa linha possue erro na formatação, portanto foi consertada\n","terremotos['time'][7512] = \"02:53:41\"  #Essa linha possue erro na formatação, portanto foi consertada\n","terremotos['time'][20650] = \"02:23:34\" #Essa linha possue erro na formatação, portanto foi consertada\n","terremotos['time'] = pd.to_datetime(terremotos['time'], infer_datetime_format=False ,format='%H:%M:%S').dt.time"],"execution_count":0,"outputs":[]},{"metadata":{"colab_type":"text","id":"D1fCQUutTEP8"},"cell_type":"markdown","source":["# Mapa de calor e de pontos\n","\n","(MICHEL)\n","\n","O mapa de calor demonstra toda a região do hemisfério em que há abalos sísmicos, enquanto um mapa de clusters centraliza seus locais de ocorrência.\n","\n","Nota-se que há uma maior intensidade de ocasionamentos na Oceania, no Sul da Ásia e na costa Oeste da América do Sul. \n","\n","Percebe-se, também, que existe um \"caminho\" dentre os terremotos demarcados, mais especificamente, derivada da movimentação das placas tectônicas, que em vezes causam terremotos ao se chocarem umas com as outras."]},{"metadata":{"colab_type":"code","outputId":"5f2b7d32-f0e1-44fe-c71f-77b9a511c92b","executionInfo":{"status":"ok","timestamp":1540780310261,"user_tz":180,"elapsed":18364,"user":{"displayName":"Larissa Moura","photoUrl":"https://lh6.googleusercontent.com/-chCXhCLWwVI/AAAAAAAAAAI/AAAAAAAAAEM/hietW_b-4Og/s64/photo.jpg","userId":"03306577723881028172"}},"id":"wcB8J8VFS-1g","colab":{"base_uri":"https://localhost:8080/","height":519,"output_embedded_package_id":"1MfaCl0kWHaiQtbmquIqVGH2_vRtOfi7U"}},"cell_type":"code","source":["#Por algum motivo, o Chrome não consegue renderizar mapas complexos\n","#Porém, o Firefox consegue renderizar o mapa abaixo sem problemas\n","\n","import folium\n","from folium.plugins import HeatMap\n","from folium import plugins\n","\n","mapa = folium.Map(\n","  location = (7.18805555556, 21.0936111111),\n","  zoom_start = 2.4,\n","  tiles = 'Stamen Terrain',\n","  width = '100%',\n","  height = '100%'\n",")\n","\n","lat_long = list(zip(terremotos[\"latitude\"], terremotos[\"longitude\"]))\n","\n","HeatMap(\n","  lat_long, \n","  radius = 10, \n","  min_opacity = 0.5, \n","  max_val = 0.1, \n","  blur = 15, \n","  name = \"Heat\", \n","  gradient = {0.25: 'green', 0.5: 'yellow', 0.75: 'orange', 1.0: 'red'}\n",").add_to(mapa)\n","\n","plugins.MarkerCluster(\n","  lat_long, \n","  name = \"Cluster\"\n",").add_to(mapa)\n","\n","mapa.add_child(folium.LayerControl())\n","\n","mapa"],"execution_count":0},{"metadata":{"colab_type":"text","id":"Ytln3JPAS-an"},"cell_type":"markdown","source":["# Analises com Histogramas\n"]},{"metadata":{"id":"rycrsAXfzidz","colab_type":"text"},"cell_type":"markdown","source":["(JONAS)\n","\n","Os terremotos ocorrem com mais frequência em novembro, dezembro e janeiro.\n","Apesar da ocorrência de  terremotos não poder ser prevista, já que não há um padrão específico que caracterize o evento,  é possível apontar as falhas geológicas onde a energia vem se **acumulando ao longo do tempo** entre duas ou mais placas tectônicas, o que faz a ocorrência de um terremoto ser mais propensa a acontecer a qualquer momento.\n","\n","\n","Analisando o segundo grafico é possivel perceber que a quantidade de terrmotos esta aumentando cada vezes mais ao longo dos anos. Um possivel motivo para isso é o aquecimento global da terra. \n","Logo, as vibrações que ocorrem nos terremotos vão **desecandeando** outros terremotos, como um efeito dominó.\n","Outro motivo seria consequência de melhores instrumentos de medição de terremotos e melhores relatórios desses grandes terremotos.\n","Em 1931, havia cerca de 350 estações sismológicas e, hoje, existem mais de 4.000 estações.\n"]},{"metadata":{"id":"1y3NobZ0sHir","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":344},"outputId":"216669c7-6a1c-4bd2-e895-6c285be1cd61","executionInfo":{"status":"ok","timestamp":1540780569517,"user_tz":180,"elapsed":1678,"user":{"displayName":"Larissa Moura","photoUrl":"https://lh6.googleusercontent.com/-chCXhCLWwVI/AAAAAAAAAAI/AAAAAAAAAEM/hietW_b-4Og/s64/photo.jpg","userId":"03306577723881028172"}}},"cell_type":"code","source":["anos_terremotos = pd.Series([i.year for i in terremotos[\"date\"]])\n","meses_terremotos = pd.Series([i.month for i in terremotos[\"date\"]])\n","\n","plt.rcParams['figure.figsize'] = (15,10) #padronizando tamanho das imagens\n","\n","plt.subplot(2, 2, 1)\n","meses_terremotos.hist(color=\"green\")\n","plt.title('Ocorrência dos terremotos por meses')\n","plt.xlabel('Meses')\n","plt.ylabel('Frequêcnia')\n","\n","plt.subplot(2, 2, 2)\n","anos_terremotos.hist(color=\"red\")\n","plt.title('Ocorrência dos terremotos por anos')\n","plt.xlabel('Anos')\n","plt.ylabel('Frequêcnia')\n","\n","plt.show()"],"execution_count":81,"outputs":[{"output_type":"display_data","data":{"image/png":"iVBORw0KGgoAAAANSUhEUgAAA34AAAEzCAYAAABucNGPAAAABHNCSVQICAgIfAhkiAAAAAlwSFlz\nAAALEgAACxIB0t1+/AAAADl0RVh0U29mdHdhcmUAbWF0cGxvdGxpYiB2ZXJzaW9uIDIuMS4yLCBo\ndHRwOi8vbWF0cGxvdGxpYi5vcmcvNQv5yAAAIABJREFUeJzs3XtclHXe//H3wDAhNSQQQ1lm3ru2\ncid51sQoUUllD5GnhLBy2crVTJNUMo9ZShbmIcrN0khv0421ltxWvLewR67Irk43qXeltbWRJwYF\nUQE5eP3+8NfckoiozAwzvp6Ph4+H853ruubz/c7Ah89c3+v6mgzDMAQAAAAA8Fl+ng4AAAAAAOBa\nFH4AAAAA4OMo/AAAAADAx1H4AQAAAICPo/ADAAAAAB9H4QcAAAAAPo7CDxfNMAxlZWXp17/+tQYP\nHqxBgwZp1qxZOnr0qMtf+7nnntPIkSP17LPPXtZxpk6dqo8//viyjvGf//mf+uGHHy7rGD/64x//\n2CzHcaXCwkJ9+eWXng4DALwKOfMMcibgeRR+uGgvv/yyPvjgA61YsUKbNm3SX/7yF1mtVo0ePVpV\nVVUue91vv/1WAwYM0B//+EcNHDhQ33///SUfa+HCherfv38zRnfpHA6H3njjDU+HcUF/+tOf9NVX\nX3k6DADwKuTM5kXOBC6d2dMBwLuUlZUpKytL77//vq6//npJktls1pQpU5Sfn68///nPuv/++7V7\n927NmjVLJ0+eVHh4uBYsWKC2bdvqyy+/1Jw5c1RWVqarrrpKTz31lGJiYlRQUKCXX35ZERERMpvN\nevLJJzVq1CjFx8frf//3f7VmzRodPXpUL730ksrLyxUSEqKMjAxJ0oYNG7RlyxZdc8012rlzp/z9\n/bVkyRJ16NBBR48e1fTp07Vv3z4FBQVp2rRpuvPOOzV69GgNHz5c9957rz766CMtXrxY1dXVuvrq\nq/X8888rMjLynL5/8skneu6552Q2mzVs2LB6z7399ttat26dTp8+rfbt2+v5559XaGio/vGPf2jB\nggU6deqUDMPQE088oSFDhtTbd9SoUTp8+LAGDx6snJwcff/995ozZ44cDocsFovmz5+vqKioJo3R\nzp07NX/+/Hpj1LZtW+cYBQQEaOfOnWrfvr3Gjx+vl156Sd9//70mTpyo+++/X6dPn9aSJUuUm5sr\nSerSpYtmzZqlP//5z/rzn/+sjz/+WEePHtVDDz3U4HZBQUH661//qszMTNXV1clsNmvGjBnq3bt3\nvT4vW7ZM+/fvV2lpqfbu3auIiAhlZmYqLCxMBw4c0MyZM/XDDz8oICBAv/vd75SQkKAffvjhnP6e\nLS0tTREREbLb7dq3b59Gjhyptm3b6u2339bJkye1ePFi3X777SovL9e8efP0+eefq7a2VuPGjXO+\nny+//LI2bdokSYqIiNCLL76oiIiI847r4cOHNXXqVDkcDlVXV+uXv/ylnnzyyUv62QLge8iZ5MyW\nmjNLSko0bdo07d+/X9XV1Ro9erTGjBkjSerfv78effRRZWdn69ChQ/rVr36ltLQ0SXLGW1tbK5vN\npueee04333yz9u7dq5kzZ+rEiROqqanRgw8+qOTk5Ev6uYELGcBF2LJlizFo0KAGn1u2bJkxefJk\nwzAMIy4uztiyZYthGIaxatUq45FHHjHq6uqMIUOGGB988IFhGIbx+eefGz179jSOHz9ubN++3YiK\nijK2bdtmGIZhFBUVGbfddpuxYcMGwzAM4/jx40bPnj2NrVu3GoZhGB988IFx3333GYZhGH/605+M\nzp07G7t27TIMwzDmzJljPPPMM4ZhGMb06dONhQsXGoZhGHv27DF69eplnDp1ykhOTjbef/99o6am\nxujRo4fx2WefOfvw0EMPndO32tpao2/fvsann35qGIZhvPnmm8att95qFBUVGZ999plx1113GSUl\nJYZhGMazzz5rTJ8+3TAMwxg6dKhRUFBgGIZhfPvtt87xOdv27duNgQMHGoZhGHV1dcY999xj/PGP\nfzQMwzB27Nhh3HnnnUZNTc1lj1GXLl2Mf/3rX8apU6eMmJgY47HHHjNqa2uNjz/+2LjrrrsMwzCM\njRs3GgkJCcbJkyeN2tpa4/e//72RmZlpGIbhHLMLbde7d2/jhx9+MAzDMP75z38a8+fPP6fPS5cu\nNbp27Wp8//33hmEYxlNPPWU8//zzhmEYxm9/+1tj+fLlhmEYxg8//GB0797dKCoqOqe/PzVt2jRn\nTF999ZURGRnpPE56errx1FNPGYZhGE8//bQxdepUo66uzjhy5Ihx9913G1999ZWxd+9e45577jGq\nq6sNwzCMt99+23jvvfcaHdf09HRj2bJlhmEYRkVFhfHkk08ahw8fbjA+AFceciY580LbeSpnPvvs\ns8asWbMMwzCM77//3rjtttuMAwcOGIZhGLGxscbkyZON2tpa49ChQ8Ztt91mHDx40Ni/f7/RvXt3\n47vvvnO+rz++/xMmTHC+1pEjR4zf//73xqlTpxp8bXgOUz1xUcrKyhQaGtrgc2FhYTp27Ji+/fZb\nlZaW6u6775YkJScna9myZfrhhx9UUlKiX/7yl5KkqKgotWnTRrt27ZIkBQYGqk+fPs7j1dTUKC4u\nTpK0c+dORUREqG/fvpKkX/3qV/r+++914MABSdLPfvYzderUSdKZ6wgOHjwo6cw3jr/61a+c7R99\n9JEsFovzNcxms7Zt26YuXbpIknr06KGioqJz+vbdd9+purpad955pyTpvvvucz63ZcsWDRo0SGFh\nYZKkESNG6O9//7tzTN5//3198803uuWWW5zfuJ7Pv/71Lx05ckTDhw+XJHXv3l2hoaH67LPPLnuM\nfv7zn6t9+/ayWCxq166d7rzzTvn7++vWW29VcXGxsy8JCQkKCgqSv7+/hg4d6uzL2RrbLiwsTOvW\nrdP+/fvVo0cPPf300w32tXfv3mrbtq0k6Z577tFnn32mmpoabdu2TUlJSZKkG2+8Ub1799b27dvP\n6W9DoqOjFRQUpA4dOuj06dOKjY2VpHp9zMvL04MPPig/Pz+FhoYqLi5OmzdvVnBwsI4ePaoPPvhA\nx44d0+jRo5WQkNDouIaFhWnr1q3asWOHLBaLFi1aJJvN1sg7DOBKQs4kZ15oO0/lzBkzZmjmzJmS\npLZt2yo8PLzeNZi//vWv5e/vr4iICIWFhengwYP6+9//rt69e6tdu3aSzrx3BQUFqq2tVVhYmHJz\nc7Vnzx6FhITo1VdfrffZQcvAVE9clJCQEOcvvJ86cuSIwsLCVFpaKqvV6mw3m80ym806evSorFar\nTCaT87kf/9i+7rrrdO2119Y7nr+/v6655hpJUnl5uYqKijR48GDn8xaLxXlx/Nmv5+/vr7q6Okln\nku7Zz/14vLOtXr1a7733nqqrq1VdXV0vvh8dO3as3r5nx3r06NF6f+wHBwfryJEjkqT58+frtdde\n05gxYxQYGKjJkyfX68NPlZeXq6qqqt7UlhMnTqisrEzBwcGXNUZXX311vf2CgoKc/z99+rSzL2e/\nxrXXXuvsy9ka2+61117Ta6+9pqFDh+qGG27Q9OnT1atXr3OO0bp163pjVl5errKyMhmGUe89+/Ez\n8tP+NuTHPppMJvn5+Tn76Ofn5+zj8ePHNWnSJPn7+0uSTp06pcGDBysiIkLLli3TypUrNW/ePPXs\n2VNz585tdFwffvhhnT59WnPnzlVxcbEeeOABTZgwocHPEIArDznzDHJmy8uZu3btUkZGhg4ePCg/\nPz85HA5nv6T67/2Pn5HS0lIFBwc7261WqwzDUGlpqZ566in94Q9/0KRJk3Tq1Ck99thjeuCBBxp8\nbXgOhR8uSteuXXXs2DF9+eWX6tixY73n8vLyNHr0aIWEhKisrEynT5+Wn5+fampqdPjwYee3m4Zh\nOBNFWVmZ81u/xthsNv3Hf/yHNmzYcM5ze/fuPe9+rVu3VmlpqW666SZJ0g8//KCIiAjn83a7XStW\nrNC7776rm266SX//+9+d34Cd7dprr9WJEyecj8++G9t1112nsrIy5+OysjJdd911zudmzpypmTNn\nauvWrZowYYJiYmLqJZSf9vPqq692Xmd2toKCgvP288d9L2WMztZYX5q63c0336wFCxbo9OnTev/9\n95WamqpPP/30nGOUlpY6/3/s2DFde+21CgkJkZ+fn/Pxj8duymekqWw2mzIzM3Xrrbee89wdd9yh\nO+64QxUVFXrhhRf00ksvaeTIkecdV0l69NFH9eijj+rbb7/VI488ou7duzu/QQZwZSNnnkHObHk5\nc8qUKXrooYeUmJgok8mkmJiYC+4TFhbmPJv6Yxx+fn4KCQmR2WzW5MmTNXnyZH3++ed65JFHFB0d\nrfbt21/wuHAfpnriolitVo0dO1ZTpkxxTu+ora1VRkaGTp8+rfj4eN1yyy26/vrrtXnzZklSdna2\nZs2apZtuuknXX3+9PvzwQ0lnEkhJSYluv/32C75u586d5XA4VFhYKEkqKirSlClTZBhGo/v1799f\n7733niTp66+/1tChQ53fbEpnklFYWJjatGmjyspKvffee6qoqDjnuDfffLP8/f2diWTDhg3ORNyv\nXz/993//t/OX8rp163T33XerpqZGo0ePdn7be9ttt8lsNsvPr/6PndlsVkVFhWpra3XjjTfq+uuv\ndyaxo0ePavLkyaqoqHDZGJ2tX79+ysnJUWVlpWpra5Wdne2cfmQ2m3X8+PFGtzt69KjGjBmjEydO\nyM/PT507dz7v2a+dO3c6pxfl5uaqe/fuMpvNuvPOO7V+/XpJ0vfff68dO3YoOjq6yX24kP79+2vd\n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\nYII=\n","text/plain":["<matplotlib.figure.Figure at 0x7f4685fc2d30>"]},"metadata":{"tags":[]}}]},{"metadata":{"id":"GBOjAT5e1QZ5","colab_type":"text"},"cell_type":"markdown","source":["**Intensidade**: É a gravidade da agitação do terremoto.\n","\n","**Magnitude**: O tamanho do terremoto é uma medida quantitativa do tamanho do terremoto em sua origem. A escala de magnitude Richter mede a quantidade de energia sísmica liberada por um terremoto.\n","\n","Quando um terremoto ocorre, sua magnitude pode receber um único valor numérico na escala de magnitude Richter . No entanto, a intensidade é variável sobre a área afetada pelo terremoto, com altas intensidades perto do epicentro e valores mais baixos mais distantes. Estes são atribuídos um valor dependendo dos efeitos da agitação de acordo com a Escala de Intensidade de Mercalli Modificada .\n","\n","\n","Para entender melhor a escala Ritcher devemos conhecer a gravidade de cada valor na escala:\n","\n","- Inferiores a 3.5 graus: raramente são notados.\n","\n","- De 3,5 a 5,4 graus: geralmente sentido, mas raramente causa danos.\n","\n","- Entre 5,5 a 6 graus: provocam pequenos danos em edifícios bem estruturados, no entanto, seus efeitos são arrasadores em edifícios de estrutura precária.\n","\n","- De 6,1 a 6,9 graus: causa destruição em áreas de até 100 quilômetros de raio.\n","\n","- De 8 a 8,5 graus: é considerado um abalo fortíssimo, causando destruição da infraestrutura.\n","\n","- De 9 graus: destruição total.\n","\n","Analisando o primeiro gráfico é possível perceber que a maioria dos terermotos variam entre 5.0  e 6.0 na escala Ritcher. Ou seja, a maioria dos terremotos registrados podem ter causado muitos danos a edificios com a estrutura ruim.\n","\n"]},{"metadata":{"id":"b5LUTPna3QUp","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":344},"outputId":"269be9ad-16ee-4bba-b98d-38452672928e","executionInfo":{"status":"ok","timestamp":1540780611117,"user_tz":180,"elapsed":822,"user":{"displayName":"Larissa Moura","photoUrl":"https://lh6.googleusercontent.com/-chCXhCLWwVI/AAAAAAAAAAI/AAAAAAAAAEM/hietW_b-4Og/s64/photo.jpg","userId":"03306577723881028172"}}},"cell_type":"code","source":["plt.subplot(2, 2, 1)\n","terremotos[\"magnitude\"].plot.hist()\n","plt.title('Ocorrencia das magnitudes (Escala Richter)')\n","plt.xlabel('Magnitude')\n","plt.ylabel('Frequêcnia')\n","\n","plt.subplot(2, 2, 2)\n","terremotos[\"depth\"].plot.hist(color=\"red\")\n","plt.title('Ocorrencia das intensidades')\n","plt.xlabel('Intensidade')\n","plt.ylabel('Frequêcnia')\n","\n","plt.show()"],"execution_count":82,"outputs":[{"output_type":"display_data","data":{"image/png":"iVBORw0KGgoAAAANSUhEUgAAA4QAAAEzCAYAAABpHs3fAAAABHNCSVQICAgIfAhkiAAAAAlwSFlz\nAAALEgAACxIB0t1+/AAAADl0RVh0U29mdHdhcmUAbWF0cGxvdGxpYiB2ZXJzaW9uIDIuMS4yLCBo\ndHRwOi8vbWF0cGxvdGxpYi5vcmcvNQv5yAAAIABJREFUeJzs3XtclHX+///HMMNEKCSwM5aWppla\nAR4yFZSvohJoWeZpgaBsbcs8thEe2FJbMzXFTNNqzTXTTBPNrE+r7ieRzZXcNcq0XTM/1S7igUFA\nUFQQrt8f/pyV8AAKDDDP++3WLec91+H1GtGXr7ne7+syGYZhICIiIiIiIm7Hw9UBiIiIiIiIiGuo\nIRQREREREXFTaghFRERERETclBpCERERERERN6WGUERERERExE2pIRQREREREXFTaggFwzBYsWIF\nAwcOJCoqisjISKZOnUpubq6rQ6u0iRMnsm3btus6xt13382hQ4eqKaLad+zYMR588EEAiouL2bhx\nY5WPsWTJEiZPnlxtMR09epT+/fuTk5PD5MmT6d69O1FRUeX+S05OrrbzARw6dIi77767yvu0a9fO\nGVNkZCT3338/c+bMoaysDKjcz1i7du04evToJd/78MMPqxQTQHJyMgsWLKjyfiLiflTLz6uuWv7t\nt98ycuTIq263Z88e9u/ff93n+6WLa/ovXUutPnr0KO3atauO0KQBsrg6AHG91157jZ07d7J06VJu\nvvlmzp07x2uvvUZ8fDzr16/Hy8vL1SFe1auvvurqEFyuadOmfPrppwD885//ZOPGjQwaNMilMb3w\nwguMGTOGX/3qVwA89thjjB492qUxXY7ZbGbz5s3O1ydPnuQ3v/kNKSkpDB8+/Lp+xhwOB++88w7D\nhw+v0n7jxo3joYceIiIignvuueeazy8iDZ9qefUKDg5m2bJlV91u/fr13HvvvbRv375az39xTRep\nabpC6Oby8/NZsWIFc+fO5eabbwbAYrGQmJjIDTfcwMcffwzAvn37GDx4MJGRkcTFxZGZmQnA/v37\niY6OJioqiocffpgvvvgCgF27dhEdHc2ECRNISEjg0KFD9OzZk1deeYW4uDgAvvrqK4YMGUJERATD\nhw93HnPDhg2MHz+epKQkIiMjGTBgAD/88AMAubm5jBo1ir59+zJw4EB27NgBQHx8vDPWzz//nIED\n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\nq5XBgwc7446Ojmb8+PFERkbSrl07Jk+ezLhx43j33XeJi4sjISHBeafK2NhYbr/99qp+5MD5tRb/\n8z//Q0REBLfddhvPPvsszzzzDLNnz2bs2LH84x//oF+/frRt25YHHnigwjeGV3Lvvfcyb948wsLC\nSEtLY9y4cTz55JPY7Xbi4+Od2w0fPpzdu3fTr18/mjVrRr9+/ZyFbfr06UybNo1169YB59fG3XLL\nLfTt25ekpCTuv/9+zGYzLVu2ZPbs2RViCAoKYu/evQwcONA59t5775W70xmcnw67YsUKwsLCGDJk\nCGazGU9PT2bOnAnAzJkzef7551m9ejU33XQT8+bNw9fXlyeffJJBgwYREBDAM888Q79+/Rg1ahRv\nv/2289i/+c1vmDRpEhs2bKBLly5MmjSJ3//+9wQHB5ebsnkpt956K4MHD2bevHnlfnZuvPFGFi1a\nRGJiIsBl879Yu3btuOmmm5zN7fz585k+fToLFizAw8ODJ5544rJ/bo4fP47D4dBjJ0TkilTLXVPL\n+/Xrx9y5c8nMzGTy5Mn88MMPzrWMLVq0cNayy7lcTbn4S8LL1eor1cJPP/2USZMm8cQTT9CoUSOG\nDRtWLuZLxenv73/ZWiwNm8mo6rwuEakVF0/fmTNnDqWlpSQlJbk4qsr75ptvmDhxIps3b8bDQ5MR\nrtXatWtJS0tjyZIlrg5FREREGiD9K02kDvr8888ZMmQIxcXFnDp1irS0NOfd1uqLjh070rx5c7Zs\n2eLqUOqtkpISVqxYwahRo1wdioiIiDRQukIoUgeVlpby0ksv8be//Q0PDw969+7NlClT6t2VtsOH\nD/Pkk0+ycuXKSt2gQMp77bXXACrcsEdERESkuqghFBERERERcVP163KDiIiIiIiIVBs1hCIiIiIi\nIm6qwT92wuEovPpGleDn501eXuWeX1YXKX7XUvyupfhdqzbjt9l8auU8DYVq5H8ph7qjIeShHOqO\nhpBHdeRwpfqoK4SVZLGYXR3CdVH8rqX4XUvxu1Z9j1+uriH8HiuHuqMh5KEc6o6GkEdN56CGUERE\nRERExE2pIRQREREREXFTaghFRERERETclBpCERERERERN6WGUERERERExE2pIRQREREREXFTaghF\nRERERETclBpCERERERERN1WjDeGBAwfo168fq1atKjf+xRdf0K5dO+frTZs2MWTIEIYNG8a6desA\nKCkpISEhgZiYGOLi4sjMzARg//79REdHEx0dzbRp02oyfBERERERkQbNUlMHLioqYsaMGYSEhJQb\nP3v2LH/84x+x2WzO7RYvXkxKSgqenp4MHTqUiIgIUlNT8fX1JTk5mR07dpCcnMyCBQuYOXMmSUlJ\nBAcHk5CQQFpaGr169aqpNJwGJnxc4+eojD9N7uPqEERERJxsdt/z/3dxHACO7AJXhyAiUu/U2BVC\nq9XK0qVLsdvt5cbfeustYmNjsVqtAOzZs4egoCB8fHzw8vKic+fOZGRkkJ6eTkREBAChoaFkZGRQ\nXFxMVlYWwcHBAISHh5Oenl5TKYiIiIiIiDRoNXaF0GKxYLGUP/xPP/3E/v37mTBhAnPnzgUgJycH\nf39/5zb+/v44HI5y4x4eHphMJnJycvD19XVuGxAQgMPhuGIcfn7eWCzm6krL5Ww2H5fsWxcoftdS\n/K6l+EVERKQm1FhDeCmzZs3ihRdeuOI2hmFUevxy214sL6+ocsHVEw5H4TXtZ7P5XPO+dYHidy3F\n71qKv2rnEhERkcqrtbuMHjt2jB9//JHnn3+e4cOHk52dTVxcHHa7nZycHOd22dnZ2O127Ha78+pf\nSUkJhmFgs9nIz88vd8xfTkkVERERERGRyqm1hrBp06b87//+Lx9++CEffvghdrudVatW0aFDB/bu\n3UtBQQGnTp0iIyODLl260KNHDzZv3gxAamoq3bp1w9PTk9atW7N7924Atm7dSlhYWG2lICIiIiIi\n0qDU2JTRffv2MWfOHLKysrBYLGzZsoVFixbRpEmTctt5eXmRkJDAyJEjMZlMjBkzBh8fHwYMGMDO\nnTuJiYnBarUye/ZsAJKSkpg6dSplZWV06NCB0NDQmkpBRERERESkQauxhjAwMJCVK1de9v1t27Y5\nfx0VFUVUVFS5981mM7NmzaqwX5s2bVi9enX1BSoiIiIiIuKmam3KqIiIiIiIiNQtaghFRERERETc\nlBpCERERERERN1WrzyEUERGR8w4cOMDo0aMZMWIEcXFxjB8/nry8PADy8/Pp2LEjTz/9NAMHDiQw\nMBAAPz8/Fi5cSGFhIQkJCRQWFuLt7U1ycjJNmjRh586dzJ8/H7PZzP/7f/+PMWPGuDJFERGpB9QQ\nioiI1LKioiJmzJhBSEiIc2zhwoXOX0+ZMoVhw4YB0KpVqwo3aVuxYgVdu3blySefZO3atSxdupTE\nxERefvllli1bRtOmTYmLiyMyMpI2bdrUTlIiIlIvacqoiIhILbNarSxduhS73V7hvR9//JHCwkKC\ng4Mvu396ejoREREAhIeHk56eTmZmJjfddBO33HILHh4e9OrVi/T09BrLQUREGgY1hCIiIrXMYrHg\n5eV1yffee+894uLinK9zcnIYP3480dHRbNq0yTnm7+8PQEBAANnZ2TgcDucYgL+/Pw6HowazEBGR\nhkBTRkVEROqI4uJivvrqK6ZPnw5AkyZNmDBhAg899BCFhYUMGzaM7t27l9vHMIxrPp+fnzcWi/l6\nQq5TbDYfl+5fFzSEHKBh5KEc6o6GkEdN5qCGUEREpI74xz/+UW6qaOPGjRkyZAhw/opfYGAgP/74\nI3a7HYfDgY+PD8eOHcNut2O328nJyXHue2H8SvLyiq47Ztt1H6H6OByF17yvzeZzXfvXBQ0hB2gY\neSiHuqMh5FEdOVypodSUURERkTpi7969tG/f3vn6yy+/ZNasWcD5G9Hs37+fVq1a0aNHDzZv3gzA\n1q1bCQsL49Zbb+XkyZMcOnSIc+fOkZqaSo8ePVySh4iI1B+6QigiIlLL9u3bx5w5c8jKysJisbBl\nyxYWLVqEw+GgRYsWzu26dOnCxo0b+fWvf01paSlPPfUUTZs2JT4+nsTERGJjY/H19WXu3LkATJ8+\nnYSEBAAGDBhAq1atXJKfiIjUH2oIRUREallgYGCFR0kAvPjii+VeWywWZs+eXWG7Ro0asWTJkgrj\n9913H2vXrq2+QEVEpMHTlFERERERERE3pYZQRERERETETakhFBERERERcVNqCEVERERERNyUGkIR\nERERERE3pYZQRERERETETakhFBERERERcVNqCEVERERERNyUGkIRERERERE3pYZQRERERETETakh\nFBERERERcVNqCEVERERERNxUjTaEBw4coF+/fqxatQqAI0eOMGLECOLi4hgxYgQOhwOATZs2MWTI\nEIYNG8a6desAKCkpISEhgZiYGOLi4sjMzARg//79REdHEx0dzbRp02oyfBERERERkQatxhrCoqIi\nZsyYQUhIiHNswYIFDB8+nFWrVhEREcHy5cspKipi8eLFvPvuu6xcuZIVK1aQn5/Pp59+iq+vLx98\n8AGjRo0iOTkZgJkzZ5KUlMSaNWs4efIkaWlpNZWCiIiIiIhIg1ZjDaHVamXp0qXY7Xbn2LRp04iM\n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\nTa4rJhERafiu2BB+/fXX9O7d2/n6+PHj9O7dG8MwMJlMbN++vUona9q0KZGRkQwfPhyAF154gaCg\nICZNmsTatWtp1qwZgwYNwtPTk4SEBEaOHInJZGLMmDH4+PgwYMAAdu7cSUxMDFarldmzZ1c5YRER\nkepQ3TVy2LBhDBs2DIC///3v/PnPf+bgwYPMmjWLtm3bOrfLzMzks88+Y82aNZw8eZLY2Fh69uzJ\nihUr6Nq1K08++SRr165l6dKlJCYmVkeqIiLSgF2xIdy8eXO1nzA6Opro6OhyY8uXL6+wXVRUFFFR\nUeXGzGazc/G+iIiIK9VEjbxg8eLFzJs3j+eee67Ce7t27SIsLAyr1Yq/vz/Nmzfn4MGDpKen88or\nrwDn79o9atSoGotPREQajis2hM2bN6+tOKSSfjN7m6tDcPrT5D6uDkFExGVqqkZ+++233HLLLdhs\nNgAWLlxIXl4ed9xxB0lJSZW6E3dAQADZ2dlXPZduvFa9+9cFDSEHaBh5KIe6oyHkUZM5VGkNoYiI\niNSslJQUHnnkEeD8oyzatWtHixYtmDZtGu+//36F7S91M5vK3uCmOm68ZrvuI1Sf67l5UX2/eRM0\njBygYeShHOqOhpBHdeRwpYbyig+mFxERkdq1a9cuOnXqBEBERAQtWrQAoE+fPhw4cKDCnbgvvkO3\nw+EoNyYiInI1aghFRETqiGPHjtGoUSOsViuGYTBixAgKCgqA843inXfeSffu3dm+fTvFxcUcO3aM\n7Oxs2rRpQ48ePZzrGi/ctVtERORqNGVURESkjnA4HM51gCaTieHDhzNixAhuvPFGmjZtyrhx47jx\nxhsZPnw4cXFxmEwmpk+fjoeHB/Hx8SQmJhIbG4uvry9z5851cTYiIlIfqCEUERGpIy48Y/CCAQMG\nMGDAgArbxcfHEx8fX26sUaNGLFmypMZjFBGRhkVTRkVERERERNyUGkIRERERERE3pYZQRERERETE\nTakhFBERERERcVNqCEVERERERNyUGkIRERERERE3pYZQRERERETETakhFBERERERcVNqCEVERERE\nRNyUGkIRERERERE3pYZQRERERETETakhFBERERERcVNqCEVERERERNyUGkIRERERERE3pYZQRERE\nRETETakhFBERERERcVNqCEVERERERNyUGkIRERERERE3pYZQRERERETETbmkITxz5gz9+vVjw4YN\nHDlyhPj4eGJjY5kwYQLFxcUAbNq0iSFDhjBs2DDWrVsHQElJCQkJCcTExBAXF0dmZqYrwhcRERER\nEWkQXNIQvvnmm9x0000ALFy4kNjYWFavXk3Lli1JSUmhqKiIxYsX8+6777Jy5UpWrFhBfn4+n376\nKb6+vnzwwQeMGjWK5ORkV4QvIiIiIiLSINR6Q/h///d/HDx4kN69ewOwa9cu+vbtC0B4eDjp6ens\n2bOHoKAgfHx88PLyonPnzmRkZJCenk5ERAQAoaGhZGRk1Hb4IiIiIiIiDYaltk84Z84cXnzxRTZu\n3AjA6dOnsVqtAAQEBOBwOMjJycHf39+5j7+/f4VxDw8PTCYTxcXFzv0vxc/PG4vFXIMZuS+bzadB\nn6+6KX7XUvyuVd/jrw27du1iwoQJ3HnnnQC0bduWJ598kokTJ1JaWorNZmPu3LlYrVY2bdrEihUr\n8PDwYPjw4QwbNoySkhImT57M4cOHMZvNzJo1i9tuu83FWYmISF1Xqw3hxo0b6dix42ULlGEY1TJ+\nsby8osoHKFXicBTW2rlsNp9aPV91U/yupfhdqzbjr++NZ9euXVm4cKHz9ZQpU4iNjaV///7Mnz+f\nlJQUBg0axOLFi0lJScHT05OhQ4cSERFBamoqvr6+JCcns2PHDpKTk1mwYIELsxERkfqgVqeMbt++\nnc8//5zhw4ezbt06lixZgre3N2fOnAHg2LFj2O127HY7OTk5zv2ys7Od4w6HAzh/gxnDMK54dVBE\nRKQ+07IKERGpabV6hfDibyoXLVpE8+bN+frrr9myZQsPP/wwW7duJSwsjA4dOvDCCy9QUFCA2Wwm\nIyODpKQkTp48yebNmwkLCyM1NZVu3brVZvgiIiI16uDBg4waNYoTJ04wduzYGl9WISIiUutrCH9p\n3LhxTJo0ibVr19KsWTMGDRqEp6cnCQkJjBw5EpPJxJgxY/Dx8WHAgAHs3LmTmJgYrFYrs2fPdnX4\nIiIi1eL2229n7Nix9O/fn8zMTB577DFKS0ud79fEsoqGts7+eqcM1/cpx9AwcoCGkYdyqDsaQh41\nmYPLGsJx48Y5f718+fIK70dFRREVFVVu7MIieRERkYamadOmDBgwAIAWLVrwq1/9ir1793LmzBm8\nvLyuuKyiY8eOzmUV7du3r/SyiupYZ2+77iNUn+tZq1rf1+pCw8gBGkYeyqHuaAh5VEcOV2ooXfIc\nQhERESlv06ZNLFu2DACHw8Hx48cZPHgwW7ZsASi3rGLv3r0UFBRw6tQpMjIy6NKlCz169GDz5s0A\nWlYhIiKV5vIpoyIiIgJ9+vTh+eef5/PPP6ekpITp06dz1113aVmFiIjUKDWEIiIidUDjxo156623\nKoxrWYWIiNQkTRkVERERERFxU2oIRURERERE3JQaQhERERERETelhlBERERERMRNqSEUERERERFx\nU2oIRURERERE3JQaQhERERERETelhlBERERERMRNqSEUERERERFxU2oIRURERERE3JQaQhERERER\nETelhlBERERERMRNqSEUERERERFxU2oIRURERERE3JQaQhERERERETelhlBERERERMRNqSEUERER\nERFxU2oIRURERERE3JQaQhERERERETelhlBERERERMRNqSEUERERERFxU5baPuGrr77KV199xblz\n53j66acJCgpi4sSJlJaWYrPZmDt3LlarlU2bNrFixQo8PDwYPnw4w4YNo6SkhMmTJ3P48GHMZjOz\nZs3itttuq+0UREREREREGoRabQi//PJLfvjhB9auXUteXh6PPPIIISEhxMbG0r9/f+bPn09KSgqD\nBg1i8eLFpKSk4OnpydChQ4mIiCA1NRVfX1+Sk5PZsWMHycnJLFiwoDZTEBERERERaTBqtSG87777\nCA4OBsDX15fTp0+za9cuXnrpJQDCw8P505/+RKtWrQgKCsLHxweAzp07k5GRQXp6OoMGDQIgNDSU\npKSk2gxfRESkRv1yFs22bdv47rvvaNKkCQAj/7/27j28hjuP4/j75ByRhrgkTRB1abMaZFXd6hqX\nbBta+1BWVVRVS607i6IRwnqUkqUttq17ShfbsF19qm67bGtFloYsfdoSSl2ykhC5IsTsH55MJZJo\nKpwz8nn95cycM/P9/k7M7/ed+c2cwYPp3LmzZtGIiEiZua8Fod1ux9PTE4CYmBg6duzInj17cHd3\nB8DHx4eUlBRSU1Px9vY2P+ft7X3bcjc3N2w2G7m5uebni1K9uicOh/0eZlV++fp6PdD7K2uK37kU\nv3NZPf77oahZNG3atGH8+PF06dLFfF9OTo5m0YiISJm57/cQAuzcuZOYmBhWrlxJaGioudwwjCLf\nX9rlt0pLy/llQcodpaRk3rd9+fp63df9lTXF71yK37nuZ/xWLjyLmkWTl5d32/sSEhI0i0ZERMrM\nfS8Iv/rqKz744AOWL1+Ol5cXnp6eXLlyBQ8PD86fP4+fnx9+fn6kpqaan0lOTubJJ5/Ez8+PlJQU\nGjZsyLVr1zAMo8SrgyIiIlZR1Cwau93O2rVrWbVqFT4+PkybNk2zaEpwtycErHxCId+DkAM8GHko\nB9fxIORxL3O4rwVhZn0krvwAABXlSURBVGYm8+bNY/Xq1eb9EO3atWPbtm307NmT7du3ExwcTNOm\nTYmIiCAjIwO73U58fDzh4eFkZWWxdetWgoOD2bVrF61bt76f4YuIiNxzt86iOXLkCNWqVaNRo0Ys\nXbqUxYsX06xZswLvd/YsGt+73kLZuZsr0Va/Eg8PRg7wYOShHFzHg5BHWeRQUkF5XwvCLVu2kJaW\nxrhx48xlc+fOJSIigg0bNuDv78/zzz9PhQoVmDBhAoMHD8ZmszFy5Ei8vLx47rnn2Lt3L2FhYbi7\nuzN37tz7Gb4U8trcfzo7BABWTglxdggiImWi8Cyatm3bmutCQkKYMWMGXbt21SwaEREpM/e1IHzx\nxRd58cUXb1u+atWq25Z169aNbt26FViW/9Q0ERGRB01Rs2hGjx7NpEmTqFOnDnFxcTRo0ECzaERE\npEw55aEyIiIiUlBRs2h69+7NuHHjeOihh/D09GTOnDl4eHhoFo2IiJQZFYQiIiIuoLhZNL169bpt\nmWbRFM3Xr8rdfb6M4khJziijLYmI3Htuzg5AREREREREnEMFoYiIiIiISDmlglBERERERKScUkEo\nIiIiIiJSTqkgFBERERERKadUEIqIiIiIiJRTKghFRERERETKKf0OoVjea3P/6ewQTCunhDg7BBER\nERGRn01XCEVERERERMopFYQiIiIiIiLllApCERERERGRckoFoYiIiIiISDmlglBERERERKScUkEo\nIiIiIiJSTulnJ0RERETKkK9fFeftu9DrlOQMp8QhItahK4QiIiIiIiLllApCERERERGRckoFoYiI\niIiISDmlglBERERERKSc0kNlRMrQa3P/6ewQTCunhDg7BBEREZFSuRcPZSr8sKWfozw9kElXCEVE\nRERERMopXSEUEREReUA58ycwCitPV1xErMSSBeFbb71FQkICNpuN8PBwnnjiCWeHJOJyXGX6qqau\nitxf6iNFpLSKO3HwS6ZaivVYriD8z3/+w6lTp9iwYQPHjx8nPDycDRs2ODssERERp1MfKSIipWW5\n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\nQmCC\n","text/plain":["<matplotlib.figure.Figure at 0x7f4670df76a0>"]},"metadata":{"tags":[]}}]},{"metadata":{"id":"dPEc_6kU13pK","colab_type":"text"},"cell_type":"markdown","source":["# Top 5 das regiões que mais acontecem terremotos \n","\n","(LARISSA)\n","\n","Para melhorar a visualização utilizamos o \"*Folium*\", que permitiu conferirmos as 5(cinco) regiões com maior ocorrência de terremotos de 1965 à 2016. \n","\n","Para isto, seguimos os seguintes passos:\n","  - Utilizamos uma biblioteca Python chamada \"[Reverse Geocoder](https://github.com/thampiman/reverse-geocoder)\" para transformar os dados de \"latitude\" e \"longitude\" em regiões, facilitando assim a exibição das informações;\n","  - Selecionamos as 5 regiões com maior ocorrência de tremores de terra;\n","  - Após o último passo, selecionamos a latitude e a longitude destes países e marcamos no mapa, para assim visualizarmos as regiões que com maior frequência sofrem terremotos.\n","\n"]},{"metadata":{"id":"SJPM9azxZNRL","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":89},"outputId":"96cc8c69-c6cd-4126-e0d8-f578c18d0471","executionInfo":{"status":"ok","timestamp":1540795362280,"user_tz":180,"elapsed":3109,"user":{"displayName":"natalia brito","photoUrl":"https://lh5.googleusercontent.com/-R88XQR2c4H4/AAAAAAAAAAI/AAAAAAAAANs/MrBMmeqpMNE/s64/photo.jpg","userId":"00706747172851300870"}}},"cell_type":"code","source":["#Instalando o pacote reverse geocoder\n","!pip install reverse_geocoder"],"execution_count":14,"outputs":[{"output_type":"stream","text":["Requirement already satisfied: reverse_geocoder in /usr/local/lib/python3.6/dist-packages (1.5.1)\n","Requirement already satisfied: scipy>=0.17.1 in /usr/local/lib/python3.6/dist-packages (from reverse_geocoder) (0.19.1)\n","Requirement already satisfied: numpy>=1.11.0 in /usr/local/lib/python3.6/dist-packages (from reverse_geocoder) (1.14.6)\n"],"name":"stdout"}]},{"metadata":{"id":"7VzUsFoAZpKf","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":119},"outputId":"d01f0fec-bc6f-4568-fe2c-c4bf8545e8c5","executionInfo":{"status":"ok","timestamp":1540781001177,"user_tz":180,"elapsed":533,"user":{"displayName":"Larissa Moura","photoUrl":"https://lh6.googleusercontent.com/-chCXhCLWwVI/AAAAAAAAAAI/AAAAAAAAAEM/hietW_b-4Og/s64/photo.jpg","userId":"03306577723881028172"}}},"cell_type":"code","source":["import reverse_geocoder as rg\n","\n","#Criando coluna com as coordenadas\n","coordinate = []\n","for lat, long in zip(terremotos['latitude'], terremotos['longitude']):\n","  lat_long = (lat, long)\n","  coordinate.append(lat_long)\n","\n","terremotos[\"coordinate\"] = coordinate\n","result_paises = rg.search(coordinate)\n","\n","#Criando coluna com os locais\n","locais = [dict['name'] for dict in result_paises]\n","terremotos[\"locais\"] = locais\n","\n","terremotos[\"locais\"].head()"],"execution_count":87,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0          Saipan\n","1    Tongutisungi\n","2          Pangai\n","3       Grytviken\n","4          Dapdap\n","Name: locais, dtype: object"]},"metadata":{"tags":[]},"execution_count":87}]},{"metadata":{"id":"39bQcSbzJPLa","colab_type":"code","colab":{}},"cell_type":"code","source":["#Instalando o pacote Folium\n","!pip install folium"],"execution_count":0,"outputs":[]},{"metadata":{"id":"psd34mjkBZwK","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":71},"outputId":"efeb390e-366a-480c-bc64-5062e85d2ef2","executionInfo":{"status":"ok","timestamp":1540780316203,"user_tz":180,"elapsed":581,"user":{"displayName":"Larissa Moura","photoUrl":"https://lh6.googleusercontent.com/-chCXhCLWwVI/AAAAAAAAAAI/AAAAAAAAAEM/hietW_b-4Og/s64/photo.jpg","userId":"03306577723881028172"}}},"cell_type":"code","source":["from collections import Counter\n","\n","#Contagem de regiões com maior ocorrência\n","cinco_locais= terremotos[\"locais\"]\n","locais_counts = [ [key, value] for key, value in Counter(cinco_locais).items()]\n","locais_counts.sort(key=lambda x: x[1], reverse=True)\n","print(locais_counts)\n","\n","#As 5 regiões com maior ocorrência de tremores\n","locais_terremotos = [i[0] for i in locais_counts[0:5]]\n","print(locais_terremotos)"],"execution_count":68,"outputs":[{"output_type":"stream","text":["[['`Ohonua', 890], ['Grytviken', 532], ['Hihifo', 436], ['Haveluloto', 406], [\"Kuril'sk\", 364], ['Kokopo', 334], ['Isangel', 325], ['Lata', 308], ['Dutch Harbor', 302], ['Panguna', 267], [\"Severo-Kuril'sk\", 242], ['Alo', 238], ['Sola', 233], ['Hanga Roa', 226], ['Saipan', 200], ['Adamstown', 199], ['Shikotan', 192], ['Kirakira', 184], ['Buka', 182], ['Waitangi', 180], ['Tadine', 171], ['Port-Vila', 158], ['Beringovskiy', 150], ['Unalaska', 145], ['Pangai', 144], ['Lospalos', 143], ['Neiafu', 143], ['Edinburgh of the Seven Seas', 140], ['Ostrov Paskhi', 137], ['Kimbe', 134], ['Georgetown', 129], ['Miyako', 127], ['Shimoda', 124], ['Tongutisungi', 117], ['Port-Olry', 115], [\"Ust'-Kamchatsk Staryy\", 114], ['Finschhafen', 111], ['Gizo', 106], ['Katsuura', 106], ['Geser', 103], ['Riverton', 103], ['Petropavlovsk-Kamchatsky', 103], ['Kandrian', 97], ['Punta de Burica', 95], ['Puerto Villamil', 94], ['Tilichiki', 93], ['Fernando de Noronha (Distrito Estadual)', 93], ['Suva', 92], ['Geeveston', 92], ['Kurchatov', 92], ['Hasaki', 89], ['Port-aux-Francais', 84], ['Onagawa Cho', 83], ['Namie', 78], ['Naze', 76], ['Bitung', 74], ['Hualian', 72], ['Yamada', 72], ['Iquique', 71], ['Vaini', 71], ['Lorengau', 70], ['Sabang', 68], ['Tobelo', 67], ['McMurdo Station', 67], ['Tual', 66], ['Saratamata', 66], ['Merizo Village', 64], ['Ghurayd Gharame', 63], ['Yonakuni', 63], ['Honiara', 63], ['Lakatoro', 63], ['Nadi', 61], ['Antofagasta', 61], ['Kushiro', 61], ['Sand Point', 60], ['Port Blair', 60], ['Sibigo', 60], ['Pondaguitan', 59], ['Madang', 56], ['Opotiki', 55], ['Mangarang', 55], ['Shizunai-furukawacho', 55], ['Kamaishi', 55], ['Kettering', 55], ['Kavieng', 54], ['Ribeira Grande', 52], ['Shingu', 52], ['Lampuyang', 52], ['Lae', 51], ['Hithadhoo', 50], ['Calama', 50], ['Port Mathurin', 50], ['Fais', 49], ['Rabaul', 48], ['Levuka', 47], ['Kodiak Station', 46], ['Kotabunan', 46], ['Muara Siberut', 46], ['Ozernovskiy', 45], ['Illapel', 44], ['Augusta', 44], ['Iwaki', 44], ['Ipuh', 44], ['Tateyama', 43], ['Bamboo Flat', 43], ['Angoram', 43], ['Ovalle', 42], ['Luganville', 41], ['Akutan', 41], ['Grande Anse', 41], ['Essang', 40], ['Hirara', 39], ['Jose Maria Pino Suarez (Nuevo Nahuapa)', 39], [\"Nuku'alofa\", 37], ['Bilungala', 37], ['Gisborne', 37], ['Ancud', 37], ['Valparaiso', 37], ['Pulo Batal', 37], ['Yigo Village', 36], ['Hadibu', 36], ['Prince Rupert', 36], ['Remire-Montjoly', 35], ['Olonkinbyen', 35], ['Jambulang', 35], ['Coquimbo', 34], ['Puerto Madero', 34], ['Susupu', 33], ['Padasuka', 33], ['Zaybak', 32], ['Nishinoomote', 32], ['Tofino', 32], ['Mata-Utu', 32], ['Taltal', 31], ['Rikitea', 31], ['San Pedro de Atacama', 31], ['Kainantu', 31], ['Copiapo', 31], ['Cruz de Machacamarca', 30], ['Biha', 30], ['Bintuhan', 30], ['Yilan', 30], ['Stanley', 30], ['Manna', 30], ['Masachapa', 29], ['Nago', 28], ['San Andres Playa Encantada (El Podrido)', 28], ['Sigave', 28], ['Buala', 27], ['Nemuro', 27], ['Chonchi', 27], ['Vallenar', 27], ['Rainis', 27], ['Aitape', 27], ['San Antonio', 27], ['Te Anau', 27], ['Ofunato', 26], ['Ferndale', 26], ['General Luna', 26], ['Lhokkruet', 26], ['Taitung City', 25], ['Cordova', 25], ['Molibagu', 25], ['Samanente', 25], ['El Tabo', 25], ['Tais', 25], ['Iskateley', 25], ['Obihiro', 24], ['Bahoi', 24], ['Taitung', 24], ['San Antonio de los Cobres', 24], ['Saukorem', 24], ['Lirung', 24], ['Sarangani', 23], ['Port Orford', 23], ['Amahusu', 23], ['Laiwui', 23], ['Ogotua', 23], ['Champerico', 23], ['Guay', 23], ['Queenstown', 23], ['Dufa-Dufa', 23], ['Lebu', 23], ['Oyama', 22], [\"Taro'a\", 22], ['Tasiilaq', 22], ['Puerto El Triunfo', 22], ['Fort Dauphin', 22], ['Hengchun', 21], ['Anchor Point', 21], ['Sengge', 21], ['Cygnet', 21], ['Constantia', 20], ['Luwuk', 20], ['Leksula', 20], ['Ransiki', 20], ['Natal', 20], ['Akubala', 20], ['Namuac', 20], ['Puerto San Jose', 20], ['Lagoa', 20], ['Atlasovo', 19], ['Canete', 19], ['Ushuaia', 19], ['Dobo', 19], ['Acarau', 19], ['Sabtang', 18], ['Tarauaca', 18], ['Saparua', 18], ['Corinto', 18], ['Villa Rotaria', 18], [\"Jeffrey's Bay\", 18], ['La Ligua', 17], ['Kiruru', 17], ['Cabo San Lucas', 17], ['Tocopilla', 17], ['Susques', 17], ['Rinconada', 17], ['Putre', 17], ['West Island', 17], ['Gadung', 17], ['Ketahun', 17], ['Vao', 17], ['Barcelona', 16], ['Inarajan Village', 16], ['East London', 16], ['Bluff', 16], ['Basira Satu', 16], ['Talcahuano', 16], ['Bula', 16], ['Bogorawatu', 16], ['Santa Monica', 16], ['Bandon', 16], ['Puerto Baquerizo Moreno', 16], ['Panenggoede', 16], ['Boroko', 16], ['Tome', 16], ['Norsup', 15], ['Kodiak', 15], ['Enemawira', 15], ['Diego de Almagro', 15], ['Cortes', 15], ['Corral', 15], ['Lambasa', 15], ['Lautoka', 15], ['Vilyuchinsk', 15], ['Santiago', 15], ['Sidorukun', 15], ['Lauke', 15], ['San Patricio', 15], ['Sechura', 15], ['`Alaqahdari Kiran wa Munjan', 15], ['Bengkulu', 15], ['Munse', 15], ['Constitucion', 15], ['Itbayat', 14], ['Cuozheqiangma', 14], ['Puerto Chacabuco', 14], [\"Gul'cha\", 14], ['Port Alfred', 14], [\"Bandar 'Abbas\", 14], ['Dabra', 14], ['Ubrub', 14], ['Ishigaki', 14], ['Topo', 14], ['Bosnik', 14], ['Sikabaluan', 14], ['Saint-Philippe', 14], ['Uyugan', 14], ['Subaim', 14], ['El Hoyo', 13], ['Hajjiabad', 13], ['Takahagi', 13], ['Bredasdorp', 13], ['Quepos', 13], ['San Jose Village', 13], ['Muisne', 13], ['Sidomulyo', 13], ['Ulu', 13], ['Topolobampo', 13], ['Namlea', 13], ['Caburan', 13], ['Jamestown', 13], ['La Libertad', 13], ['Baie aux Huitres', 13], ['Kulia Village', 13], ['Krajan Tambakrejo', 13], ['Acajutla', 13], ['Kotaagung', 12], ['Wewak', 12], ['Iwanai', 12], ['Kitaibaraki', 12], ['Beatty', 12], ['Denmark', 12], ['Dillingham', 12], ['Ambunti', 12], ['Atico', 12], [\"A'yi Take\", 12], ['San Luis', 12], ['La Esperanza (El Zapotal)', 12], ['Tabiauan', 12], ['Palimbang', 12], ['Ahau', 12], ['Blenheim', 12], ['Ba', 12], ['San Agustin de Valle Fertil', 12], ['Tehoru', 12], ['Iztapa', 12], ['Cargados Carajos', 12], ['Sanana', 11], ['Murghob', 11], ['Batang', 11], ['Puerto Quellon', 11], ['Longyearbyen', 11], ['Nabire', 11], ['Myitkyina', 11], ['Phek', 11], ['Tilamuta', 11], ['Wurigelebur', 11], ['Sindangsari', 11], ['Lolayan', 11], ['Mutsu', 11], ['Caucete', 11], ['Mammoth Lakes', 11], ['Samarai', 11], ['Toksun', 11], ['Bunobogu', 11], ['Santa Cruz', 11], ['Puli', 11], ['Lhoong', 11], ['Hinatuan', 10], ['Kaikoura', 10], ['Sinnamary', 10], ['Tsiombe', 10], ['Bobon', 10], ['Naha-shi', 10], ['Manzanillo', 10], ['Ilo', 10], ['Lukatan', 10], ['Kahale', 10], ['Labuhanaji', 10], ['Esperance', 10], ['Padangguci', 10], ['Puerto Ayora', 10], ['Petatlan', 10], ['Lemito', 10], ['Galafi', 10], ['Jiquilillo', 10], ['Ngunguru', 10], ['Batgram', 10], ['Aratoca', 9], ['Donggala', 9], ['Gold Beach', 9], ['Manta', 9], ['Yengiawat', 9], ['El Huitusi', 9], ['Ocucaje', 9], ['Katsuren-haebaru', 9], ['Popondetta', 9], ['Werinama', 9], ['Codrington', 9], ['Ngulu', 9], ['Tiksi', 9], ['La Gomera', 9], ['Oarai', 9], ['Alotau', 9], ['Puerto Santa', 9], ['Mutis', 9], ['Klyuchi', 9], ['Lixouri', 9], ['Labuha', 9], ['Margate', 9], ['Labuhankananga', 9], ['Vanimo', 9], ['Belen', 9], ['Kasonawejo', 9], ['Whitianga', 9], ['Tawui', 9], ['Gigmoto', 9], ['Lithakia', 9], ['Francisco Pizarro', 9], ['San Jose La Maquina', 9], ['Flying Fish Cove', 9], ['Ishikawa', 9], ['Cabodiongan', 9], ['Bahia de Caraquez', 9], ['Baucau', 8], ['Malim', 8], ['Tugu Hilir', 8], ['Sukorejo', 8], ['Haines Junction', 8], ['La Caleta Culebras', 8], ['Suncho Corral', 8], ['Savannah Bight', 8], ['Aras-asan', 8], ['Kushima', 8], ['Mawlaik', 8], ['Taramana', 8], ['Rumung', 8], ['Karangbolong', 8], ['Kinablangan', 8], ['Noshiromachi', 8], ['Kambang', 8], ['Waren', 8], ['Manganitu', 8], ['Pizarro', 8], ['Sumberbaba', 8], ['Hitachi', 8], ['Betaf', 8], ['Naruto', 8], ['Kuala Baru', 8], ['Mahibadhoo', 8], ['San Isidro', 8], ['Sayhut', 8], ['Makurazaki', 8], ['El Rosario', 8], ['Crane', 8], ['La Serena', 8], ['Tola', 8], ['Nanortalik', 8], ['Laugar', 8], ['Labuhan Bajau', 8], ['Otrada', 7], ['Ciudad Cortes', 7], ['Masisea', 7], ['San Vicente', 7], ['Kudahuvadhoo', 7], ['Bomomani', 7], ['Loreto', 7], ['Rost', 7], ['Union', 7], ['Kaimana', 7], ['Hachinohe', 7], ['Santiago de Cao', 7], ['Shimokizukuri', 7], ['Pyrgos', 7], ['Baler', 7], ['Genyem', 7], ['Ojiya', 7], ['Tamberias', 7], ['Ialibu', 7], ['Umatac Village', 7], ['Paluan', 7], ['Beo', 7], ['Hinundayan', 7], ['Miyazaki-shi', 7], ['Jurado', 7], ['Carahue', 7], ['Jaque', 7], ['Bulolo', 7], ['Lomas', 7], ['Anito', 7], ['Fern Acres', 7], ['Nggilat', 7], ['Lotofaga', 7], ['Huarmey', 7], ['San Juan de Marcona', 7], ['Mangili', 7], [\"Port Saint John's\", 7], ['Sardasht', 7], ['Wangjing', 7], ['Sindangkerta', 7], ['Dixon Lane-Meadow Creek', 7], ['Tena', 7], ['Demta', 7], ['Awaran', 7], ['Palu', 7], ['Pisco', 7], ['Christchurch', 7], ['San Felipe', 6], ['Toba', 6], ['Alianza Cristiana', 6], ['Pecatu', 6], ['Asahi', 6], ['Nichinan', 6], ['Farkhar', 6], ['Zarubino', 6], ['Takanabe', 6], ['Sulat', 6], ['Mollendo', 6], [\"Ning'er\", 6], ['Shebunino', 6], ['Santa Maria', 6], ['Santo Domingo Armenta', 6], ['Dolores', 6], ['Sitka', 6], ['Poronaysk', 6], ['Gakuch', 6], ['Y', 6], ['Albany', 6], ['Congkar', 6], ['Arteche', 6], ['Valdez', 6], ['Antofagasta de la Sierra', 6], ['San Juan del Sur', 6], ['Saint-Joseph', 6], ['Paratunka', 6], ['Pahala', 6], ['Khatanga', 6], ['Nur', 6], ['Bonggor', 6], ['San Policarpo', 6], ['Arteaga', 6], ['Bandar-e Khamir', 6], ['Gazli', 6], ['Kameri', 6], ['Shalkar', 6], ['Xitieshan', 6], ['Baras', 6], ['Westmorland', 6], ['Kuripan', 6], ['Kerman', 6], ['Bobong', 6], ['Faraulep', 6], ['Armopa', 6], ['Khandud', 6], ['San Vicente de Canete', 6], ['Las Aguamitas', 6], ['Herrera', 6], ['Craig', 6], ['Changuillo', 6], ['Tortola', 6], ['Haines', 6], ['Murindo', 6], ['Brisas Barra de Suchiate', 6], ['Harnai', 6], ['Juba', 6], ['Khuzdar', 6], ['Koroni', 6], ['Sarongan', 6], ['George Town', 6], ['Faryab', 6], ['Scarborough', 6], ['Dikson', 6], ['Manalu', 5], ['Kotzebue', 5], ['Babakantonggoh', 5], ['Tok', 5], ['Puyo', 5], ['Ondong', 5], ['Barkhan', 5], ['Sekongkang Bawah', 5], ['Buenos Aires', 5], ['Karliova', 5], ['Chauk', 5], ['Sarmi', 5], ['Ganzi', 5], ['La Cruz', 5], ['Seward', 5], ['Waipia', 5], ['Poso', 5], ['Sagres', 5], ['Airbuaya', 5], ['La Paz', 5], ['Dampek', 5], ['San Julian', 5], ['Ossora', 5], ['Harrison', 5], ['Puerto Natales', 5], ['Carlos Fonseca Amador', 5], ['Tangalla', 5], ['Willow', 5], ['Kali', 5], ['El Palmarcito', 5], ['Sangay', 5], ['Susoh', 5], ['Wau', 5], ['Karakenja', 5], ['Auki', 5], ['Cikamurang', 5], ['Kodari', 5], ['Los Andes', 5], ['Pyapon', 5], ['Aso', 5], ['Sausapor', 5], ['Rushon', 5], ['Cabatuan', 5], ['Cua', 5], ['Dolinsk', 5], ['Panubigan', 5], ['Mandarahan', 5], ['Bantogon', 5], ['Tari', 5], ['Villa San Isidro', 5], ['Ito', 5], ['Nuqui', 5], ['Vallecitos de Zaragoza', 5], ['Manuel Avila Camacho (Ponte Duro)', 5], ['Puerto Armuelles', 5], ['Boca de Yuma', 5], ['Aqqan', 5], ['Pundong', 5], ['Salinas', 5], ['Pagnag', 5], ['Tinabogan', 5], ['Rancaerang', 5], ['Nahrin', 5], ['Golfito', 5], ['Tenno', 5], ['Bergvliet', 5], ['Kabalo', 5], ['Claveria', 5], ['Tolitoli', 5], ['Keelung', 5], ['Nayun', 5], ['East Foothills', 5], ['Tranovaho', 5], ['La Playa', 5], ['Palekastro', 5], ['Tingloy', 5], ['Kema', 5], ['Svetlaya', 5], ['Rio Claro', 5], ['Krajan', 5], ['San Nicolas', 5], ['Ohara', 5], ['Nehbandan', 5], ['Emiliano Zapata (El Ranchito)', 5], ['Korido', 5], ['Paphos', 5], ['Yingmaili', 5], ['Paracas', 5], ['Talisay', 5], ['Wahai', 5], ['Luan Balu', 5], ['Gyairong', 5], ['Bahia de Kino', 4], ['Vinchina', 4], ['San Andres', 4], ['Santa Rosa', 4], ['Enez', 4], ['Taguisa', 4], ['Dipayal', 4], ['Duki', 4], ['Erhet', 4], ['Taisha', 4], ['Maizuru', 4], ['Gataivai', 4], ['Nobeoka', 4], ['Westport', 4], ['Pimentel', 4], ['San Agustin Chayuco', 4], ['Yacuiba', 4], ['Carlagan', 4], [\"Qa'en\", 4], ['Kieta', 4], ['Santa Teresa', 4], ['Montalvo', 4], ['Rodeo', 4], ['Myaundzha', 4], ['Bayabas', 4], ['Doctor Belisario Dominguez (La Barra)', 4], ['Las Veredas', 4], ['Goroka', 4], ['Zhadong', 4], ['Palora', 4], ['Paihia', 4], [\"Nevel'sk\", 4], ['Bahia de Lobos', 4], ['Cruzeiro do Sul', 4], ['El Algarrobal', 4], ['Wawa', 4], ['Palaiochora', 4], ['Arbais', 4], ['Looc', 4], ['Alice Springs', 4], ['Turangi', 4], ['Higuera de Zaragoza', 4], ['El Suchil', 4], ['Ungsang-nodongjagu', 4], ['Alemba', 4], ['Lefkada', 4], ['Masmambang', 4], ['Volcano', 4], ['Contamana', 4], ['Alugan', 4], ['Matavai', 4], ['Husavik', 4], ['Zacualpan', 4], ['Longshan', 4], ['Kuala Tuha', 4], ['Calang', 4], ['Daxing', 4], ['Dicabisagan', 4], ['Dofa', 4], ['Andimeshk', 4], ['Kingston', 4], ['Bathsheba', 4], ['Atambua', 4], ['We', 4], ['Sulangan', 4], ['Yucca Valley', 4], ['Kastri', 4], ['Gili Trawangan', 4], ['Serui', 4], ['Mosquera', 4], ['Vina del Mar', 4], ['Hawthorne', 4], ['Gosong Telaga', 4], ['Depapre', 4], ['Amapala', 4], ['Xagmakajor', 4], ['Hastings', 4], ['Habibola', 4], ['Arauco', 4], ['Ngulung Kulon', 4], ['Obock', 4], ['Owase', 4], ['Psara', 4], ['Ocos', 4], ['Sarulla', 4], ['Uwa', 4], ['West Bishop', 4], ['Kalumpang', 4], ['Hacienda La Calera', 4], ['Ester', 4], ['Isimu', 4], ['Madimba', 4], ['Fort Nelson', 4], ['General Enrique Mosconi', 4], ['San Francisco del Mar Viejo', 4], ['Khani Yek', 4], ['Waigama', 4], ['Itoman', 4], ['Manay', 4], ['Grasmere', 4], ['Dautillos', 4], ['Tamisan', 4], ['Tennant Creek', 4], ['Dehloran', 4], ['Calatagan', 4], ['Nikiski', 4], ['Gaocheng', 4], ['Colchani', 4], ['Chala', 4], ['Amberley', 4], ['Bolangitang', 4], ['Sazhubxi', 4], ['Punta de Bombon', 4], ['Inapari', 4], ['Bolaang', 4], ['Methven', 4], ['Uch-Terek', 4], ['Sardinal', 4], ['Kamiiso', 4], ['Nuwaybi`a', 4], ['Klamath Falls', 4], ['Qalansiyah', 4], ['Misawa', 4], ['Korsakov', 4], ['Furnas', 4], ['Puerto Callao', 4], ['Jiding', 4], ['Yuzawa', 4], ['Methoni', 4], ['Lugu', 4], ['Taupo', 4], ['Selfoss', 4], ['Bejuco', 4], ['Mohammadabad', 4], ['Manokwari', 4], ['Kashiwazaki', 4], ['Chipinge', 4], ['Preobrazheniye', 4], ['Shazhou', 4], ['Pingyuan', 4], ['Karonga', 4], ['Tigwav', 4], ['Otsuchi', 4], ['Shwebo', 4], ['Cube', 4], ['Dapdap', 3], ['Babana', 3], ['Jose Maria Morelos', 3], ['Karubaga', 3], ['Prieto Diaz', 3], ['Tangse', 3], ['San Ignacio', 3], ['Mae Sai', 3], ['Villa Union', 3], ['San Felix', 3], ['Dawei', 3], ['Nangong', 3], ['Paramonga', 3], ['Wabag', 3], ['Gueiria', 3], ['Novaya Chara', 3], ['Pujiharjo', 3], ['Skyros', 3], ['Remen', 3], ['Meulaboh', 3], ['Villa Presidente Frei, Nunoa, Santiago, Chile', 3], ['San Pedro', 3], ['Bareng', 3], ['Parham', 3], ['Kwikila', 3], ['Borik', 3], ['Bislig', 3], ['Coahuayana Viejo', 3], ['Bajo Naranjillo', 3], ['Dinalongan', 3], ['Dicamay', 3], ['Satawal', 3], ['Island Harbour', 3], ['Qir', 3], ['Yaguaraparo', 3], ['Healy', 3], ['Dubti', 3], ['Hakui', 3], ['Timur', 3], ['Anse-Bertrand', 3], ['Tomakomai', 3], ['Empaque Tarriba', 3], [\"Roshtqal'a\", 3], ['Pueblo Nuevo', 3], ['Puntaru', 3], ['Baculin', 3], ['El Coyul', 3], ['Jipijapa', 3], ['Cancas', 3], ['Kelluyo', 3], ['Agua Dulce', 3], ['Las Heras', 3], ['Santa Rosalia', 3], ['Yesilova', 3], ['Neryungri', 3], ['Rauna', 3], ['San Juan', 3], ['San Fernando', 3], ['Wolituogelake', 3], ['Santa Catalina', 3], ['Minjian', 3], ['Gornozavodsk', 3], ['Cabittaogan', 3], ['Huacho', 3], ['Kalpin', 3], ['Uchimaru', 3], ['Katubao', 3], ['Achanizo', 3], ['Now Dahanak', 3], ['Brooklyn', 3], ['Churachandpur', 3], ['Mabahin', 3], ['Davila', 3], ['Citotok', 3], ['Loboniki', 3], ['Myrina', 3], ['Saramiriza', 3], ['Nierong', 3], ['Jisegumen', 3], ['Camacha', 3], ['Palmerston North', 3], ['Amanzi', 3], ['Mazamari', 3], ['Katastarion', 3], ['La Tebaida', 3], ['Lahad Datu', 3], ['Karangbadar Kidul', 3], ['Gasi', 3], ['Tigao', 3], ['Saiha', 3], ['Wahang Dua', 3], ['Sandy Bay', 3], ['Zarand', 3], ['Chepes', 3], ['Zonda', 3], ['Loncopue', 3], ['Machali', 3], ['Kalawit', 3], ['Nandayure', 3], ['Shohimardon', 3], ['Hashtpar', 3], ['Saseel', 3], ['Ansus', 3], ['Balayan', 3], ['Malili', 3], ['Qom', 3], ['Tambakrejo', 3], ['Kwantisore', 3], ['Pagudpud', 3], ['Karyes', 3], ['Korem', 3], ['Tolotangga', 3], ['Barra Patuca', 3], ['Kitimat', 3], ['Manatuto', 3], ['Saravan', 3], ['Coalinga', 3], ['Port Elizabeth', 3], ['Yelizovo', 3], ['Basco', 3], ['Baganga', 3], ['Piru', 3], ['Challis', 3], ['Kharan', 3], ['Adams', 3], ['Homeyo', 3], ['Bokod', 3], ['Minas de Marcona', 3], ['Pirallahi', 3], ['Challapata', 3], ['Pangyan', 3], ['Maindong', 3], ['Jiquilisco', 3], ['Edgecumbe', 3], ['Whakatane', 3], ['Lageun', 3], ['Karang Tengah', 3], ['Pante Makasar', 3], ['Jaco', 3], ['Estique', 3], ['Santa Praxedes', 3], ['Villazon', 3], ['Taxisco', 3], ['Welkom', 3], ['Hermanus', 3], ['Turkmenbasy', 3], [\"Pa'in-e Bazar-e Rudbar\", 3], ['Palauig', 3], ['Blangkejeren', 3], ['Guruafin', 3], ['Sona', 3], ['Mazatlan', 3], ['Wasior', 3], ['Java', 3], ['Coihaique', 3], ['East End', 3], ['Kigorobya', 3], ['Santa Genoveva de Docorodo', 3], ['Castlepoint', 3], ['Sorol', 3], ['Malisbeng', 3], ['Joshua Tree', 3], ['Petani', 3], ['San Lorenzo', 3], ['Tieganlike', 3], ['Siglufjoerdur', 3], ['Yanahuaya', 3], ['Terney', 3], ['Tungor', 3], ['Sucua', 3], ['Armeria', 3], ['Xiaqiaotou', 3], ['Guleluke', 3], ['Churumuco de Morelos', 3], ['Santiago Pinotepa Nacional', 3], ['Jiayi Shi', 3], ['Kichera', 3], ['Bolitoc', 3], ['Toyooka', 3], ['Dongchuan', 3], ['Lais', 3], ['Zacatecoluca', 3], ['Burgos', 3], ['Lardos', 3], ['Fry', 3], ['Delta', 3], ['Hoit Taria', 3], ['Bambanglipuro', 3], ['Aktash', 3], ['Taco Pozo', 3], ['Barus', 3], ['Palca', 3], ['Muzaffarabad', 3], ['Kalemie', 3], ['Estrella', 3], ['Nueva Concepcion', 3], ['Cyangugu', 3], ['Saskylakh', 3], ['Alik Ghund', 3], ['Curanilahue', 3], ['Timar', 3], ['Weiyuan', 3], ['Imphal', 2], ['Acacoyahua', 2], ['Itea', 2], ['San Benito', 2], ['Platanos', 2], ['Honaz', 2], ['Las Lajitas', 2], ['Binabalian', 2], ['Jinzhong', 2], ['Musa Khel Bazar', 2], ['Toding', 2], ['Zhoutou', 2], ['Makry-Gialos', 2], ['Darchula', 2], ['Sutton-Alpine', 2], ['Paso de Arena', 2], ['Bomdila', 2], ['Loboma', 2], ['Punta Cana', 2], ['Villa Media Agua', 2], ['Sawakin', 2], ['Ulee Gle', 2], ['Acapetlahuaya', 2], ['Shimo-furano', 2], ['Asia', 2], ['Pathein', 2], ['Bihoro', 2], ['Qishn', 2], ['Batulenger Barat', 2], ['Agios Efstratios', 2], ['Paita', 2], ['Tentena', 2], ['Yuracyacu', 2], ['Maubara', 2], ['Iranshahr', 2], ['Casuguran', 2], ['Coalcoman de Vazquez Pallares', 2], ['Tulehu', 2], ['Kalkan', 2], ['Somba', 2], ['El Gouna', 2], ['Abapo', 2], ['Andalgala', 2], ['Gujo', 2], ['Ceres', 2], ['Comas', 2], ['Poblacion, San Felipe', 2], ['Avila Beach', 2], ['San Rafael del Pinal', 2], ['Pozuzo', 2], ['Del Carmen, Surigao del Norte', 2], ['Mauta', 2], ['Lar', 2], ['Bolengpulau', 2], ['Alad', 2], ['Wongan Hills', 2], ['Takanosu', 2], ['Halls Creek', 2], ['Banaz', 2], ['Puerto Casma', 2], ['Tilik', 2], ['Yokotemachi', 2], ['Carasi', 2], ['Monte Patria', 2], ['Canaveral', 2], ['Mancora', 2], ['Papayal', 2], ['Pasarbaru', 2], ['Batangtoru', 2], ['Rindingallo', 2], ['Segong', 2], ['Batuan', 2], [\"Kekeya'er Ke'erkezizu\", 2], ['Muaralimun', 2], ['Kungurtug', 2], ['Brisas de Zicatela', 2], ['Mehran', 2], ['Dogonbadan', 2], ['Namaqie', 2], ['Toora-Khem', 2], ['Ponta do Sol', 2], ['Wuluswali `Alingar', 2], ['Dera Bugti', 2], ['Aguililla', 2], ['Macas', 2], ['Djibouti', 2], ['Alausi', 2], ['Picton', 2], ['Pucara', 2], ['Jarigue', 2], ['Bereeda', 2], ['Yokaichiba', 2], ['Berlevag', 2], ['Tanabe', 2], ['Tielou', 2], ['Parapat', 2], ['Maketu', 2], ['Orcopampa', 2], ['Xishaqiao', 2], ['Heroica Guaymas', 2], ['Pedat', 2], ['Noda', 2], ['Zongga', 2], ['Callao', 2], ['Bela', 2], ['El Ramal (Porvenir)', 2], [\"Xia'er\", 2], ['Qumudi', 2], ['Diyag', 2], ['Hermenegildo Galeana', 2], ['Quibor', 2], ['Tsukawaki', 2], [\"Ol'ga\", 2], ['West Yellowstone', 2], ['Palermo', 2], ['Chancay', 2], ['Sumbawanga', 2], ['Iparia', 2], ['Panyaungan Timur', 2], ['Siumate', 2], ['Esmeraldas', 2], ['Yujing', 2], ['Dianyang', 2], ['Dajanrurung', 2], ['Pandan', 2], [\"Long'an\", 2], ['Rimpeso', 2], ['Caldiran', 2], ['Apolinario Saravia', 2], ['Ilioilio', 2], ['Breu', 2], ['Drien Rampak', 2], ['Cibaregbeg', 2], ['Maritaing', 2], ['Mutata', 2], ['Marisgama', 2], ['Yuyapichis', 2], ['Massawa', 2], ['Tisco', 2], ['Heda', 2], ['Tyup', 2], ['Leposaviq', 2], ['San Jose El Idolo', 2], ['Boshruyeh', 2], ['Gutalac', 2], ['Cauquenes', 2], ['Qasr-e Qand', 2], ['El Cardo', 2], ['La Pampa', 2], ['Colbun', 2], ['La Romana', 2], ['Broome', 2], ['Karaburun', 2], ['San Martin', 2], ['Kiupo', 2], ['Tonosi', 2], ['Linares', 2], ['Thinadhoo', 2], ['Sakaiminato', 2], ['Pining', 2], ['Mekarsari', 2], ['Achham', 2], ['Kasiguncu', 2], ['Timbiqui', 2], ['Ichihara', 2], ['El Abadia', 2], ['Hankazi', 2], ['Tumaco', 2], ['Yauca', 2], ['Nangan', 2], ['Guacamayas', 2], ['Tarragona', 2], ['Bagamanoc', 2], ['Tauripampa', 2], ['Khaydarkan', 2], ['San Juan Cacahuatepec', 2], ['Santiago Llano Grande', 2], ['Milagro', 2], ['Obelobel', 2], ['Aden', 2], ['Bintuni', 2], ['Banda', 2], ['Salina Cruz', 2], ['Kashi', 2], ['Ayios Nikolaos', 2], ['Arkalochori', 2], ['Hukay', 2], ['Lasehao', 2], ['Cochrane', 2], ['Paredon', 2], ['Bungo-Takada-shi', 2], ['Bunawan', 2], ['Chuquitira', 2], ['Loja', 2], ['Kefalos', 2], ['Kurayoshi', 2], ['Mangge', 2], ['Roxborough', 2], ['Tabid', 2], ['Sukadami', 2], ['Villetta Barrea', 2], ['Jumla', 2], ['Changsha', 2], ['Viraco', 2], ['San Pedro de Macoris', 2], ['Sarae', 2], ['Krajan Tegalombo', 2], ['Puerto Morazan', 2], ['Maca', 2], ['Nakatsugawa', 2], ['Kalbay', 2], ['Hinunangan', 2], ['Nuevo Progreso', 2], ['Villa Morelos', 2], ['Market Shop', 2], ['Waghete', 2], ['Mulatupo', 2], ['Taunsa', 2], ['Londres', 2], ['San Luqueno', 2], ['Huron', 2], ['Sokobanah', 2], ['Kalianda', 2], ['Uyuni', 2], ['Moanemani', 2], ['San Gabriel Casa Blanca', 2], ['Albardon', 2], ['El Galpon', 2], ['Nandaime', 2], ['Brades', 2], ['Colomi', 2], ['Ninotsminda', 2], ['Pandai', 2], ['Morongo Valley', 2], ['San Diego', 2], ['Chakaran', 2], ['Piti Village', 2], ['Hakuba', 2], ['Villa General Roca', 2], ['Angol', 2], ['Kalaoa', 2], ['Gonzalo Pizarro', 2], ['Chilca', 2], ['Arica', 2], ['Checker Hall', 2], ['Locumba', 2], ['Gumdag', 2], ['Ust-Kuyga', 2], ['Cicadas', 2], ['Jinka', 2], ['Colonia Dora', 2], ['Sangre Grande', 2], ['Quilca', 2], ['San Agustin', 2], ['Gevas', 2], ['Marihatag', 2], ['Mengsuo', 2], ['Arrifes', 2], ['Menglang', 2], ['Gogaran', 2], ['Farasan', 2], ['Salima', 2], ['Gra Liyia', 2], ['Mekele', 2], ['San Marcos', 2], ['Yerkesik', 2], ['Chichiriviche', 2], ['Nueva Palestina', 2], ['Tipasa', 2], ['Las Khorey', 2], ['Anda', 2], ['San Antonio Heights', 2], ['Kalat', 2], ['Urasqui', 2], ['Heka', 2], ['Surab', 2], ['Uglegorsk', 2], ['Lolak', 2], ['Posic', 2], ['Oami', 2], ['Rioja', 2], ['Colonia', 2], ['Zaysan', 2], ['Kanalaki', 2], ['Kayapa', 2], ['Niquero', 2], ['Calingasta', 2], ['Kilmia', 2], ['Yitiaoshan', 2], ['Mogok', 2], ['Provideniya', 2], ['Cabarete', 2], ['Calzada', 2], ['La Suiza', 2], ['Oni', 2], ['Changuinola', 2], ['Likwatang Timur', 2], ['Aguilera', 2], ['Carora', 2], ['Rio Dell', 2], ['Siocon', 2], ['Pasni', 2], ['Bachomobampo Numero Dos', 2], ['Idgah', 2], ['Miura', 2], ['Zhamog', 2], ['Rio Segundo', 2], ['Makubetsu', 2], ['Big Bear City', 2], ['Nanae', 2], ['Washington', 2], ['Jorf', 2], ['Kythira', 2], ['Kotabaru', 2], ['Nila Dua', 2], ['Nanao', 2], ['Molalla', 2], ['Ometepec', 2], ['Barra de Tecoanapa', 2], ['Tambopata', 2], ['Santa Susana', 2], ['Atuona', 2], ['Kenali', 2], ['Pajapita', 2], ['Tirapata', 2], ['Tirhanimine', 2], ['Yenangyaung', 2], ['Nicasio', 2], ['Oxford', 2], ['Nyaunglebin', 2], ['Yuzhno-Kurilsk', 2], ['Gardnerville Ranchos', 2], ['Ciudad Lazaro Cardenas', 2], ['Paez', 2], ['Yurimaguas', 2], ['Tarakan', 2], ['Trinidad', 2], ['Can-Avid', 2], ['Gamay', 2], ['Baiyanggou', 2], ['Hernani', 2], ['Indramayu', 2], ['Trimuris', 2], ['Meedhoo', 2], ['Etchoropo', 2], ['Azoyu', 2], ['Ridgecrest', 2], ['Nogliki', 2], ['Sungai Penuh', 2], ['Pujiawan', 2], ['Elat', 2], ['Gedaliang', 2], ['Santa Maria Jicaltepec', 2], ['Sacsamarca', 2], ['Alicik', 2], ['Podgora', 2], ['Deltana', 2], ['Thayetmyo', 2], ['Leh', 2], ['Bunisari', 2], ['Vailoatai', 2], ['Lamalera', 2], ['Bojnurd', 2], ['Satsumasendai', 2], ['Sarbisheh', 2], ['Casanay', 2], ['Roncesvalles', 2], ['Shibetsu', 2], ['Pasaco', 2], ['Bontoc', 2], ['Pucallpa', 2], ['Zirandaro', 2], ['Mizque', 2], ['Cartagena', 2], ['Moerai', 2], ['Turpay', 2], ['Kokoda', 2], ['Kazerun', 2], ['Aurora', 2], ['Elma', 2], ['Antauta', 2], ['Dalududalu', 2], ['Duzce', 2], ['Pedregal', 2], ['Srandakan', 2], ['Laiya', 2], ['Unaaha', 2], ['Canhandugan', 2], ['Tamorong', 2], ['Puente Alto', 2], ['Baku', 2], ['Isabela', 2], ['Air Bangis', 2], ['Bhachau', 2], ['Rapar', 2], ['Saiki', 2], ['Qimantage', 2], ['Wutumeiren', 2], ['Hanamaki', 2], ['Wanaka', 2], ['Ejido Doctor Alberto Oviedo Mota (El Indiviso)', 2], ['Francisco I. Madero', 2], ['Tambilil', 2], ['Kiunga', 2], ['Zhujia', 2], ['Sepanjang', 2], ['Lasi Dua', 2], ['Rumoi', 2], ['Ahonglukumu', 2], ['Seferhisar', 2], ['Rancabuaya', 2], ['Alim', 2], ['Jinbi', 2], ['Matsushima', 2], ['Bolognesi', 2], ['Kawaguchi', 2], ['Vaitogi', 2], ['Tagbak', 2], ['Yonggu', 2], ['Jiaokui', 2], ['Cambria', 2], ['Finca Blanco Numero Uno', 2], ['Pasarkuok', 2], ['Kandilli', 2], ['Palomares', 2], ['Tokamachi', 2], ['Lakateng', 2], ['Terre-de-Bas', 2], ['Litayan', 2], ['Santa Elena', 2], ['Maebaru-chuo', 2], ['Sinabang', 2], ['Baffa', 2], ['Uzunkuyu', 2], ['Katabu', 2], ['Ambelokipoi', 2], ['Petit Valley', 2], ['Lluta', 2], ['Myaydo', 2], ['Pamanukan', 2], ['Mindiptana', 2], ['Sampungu', 2], ['Bala', 2], ['Luring', 2], ['Metinaro', 2], ['Guangsheng', 2], ['Fengyi', 2], ['Weizhou', 2], ['Deputatsky', 2], ['Xumai', 2], ['Kugluktuk', 2], ['Trashigang', 2], ['Dalbandin', 2], ['Yuto', 2], ['San Francisco Menendez', 2], ['La Blanca', 2], ['Kashima-shi', 2], ['Arai', 2], ['Daigo', 2], ['Barrio Nuevo de los Muertos', 2], ['Edd', 2], ['Sakai', 2], ['Krueng Luak', 2], ['Ercek', 2], ['Saryg-Sep', 2], ['Kebar', 2], ['Ahar', 2], ['Hojancha', 2], ['Qasr-e Shirin', 2], ['Ifalik', 2], ['Abdanan', 2], ['Kangding', 2], ['Lamjung', 2], ['Ramechhap', 2], ['Suai', 2], ['Masagua', 2], ['Kumamoto', 2], ['Nereju Mic', 2], ['Preci', 2], ['Naya Bazar', 1], ['Bulakamba', 1], ['Salihli', 1], ['Patitirion', 1], ['Dimitsana', 1], ['Ishige', 1], ['Chora Sfakion', 1], ['Yaizu', 1], ['Tacoma', 1], ['Ilopango', 1], ['Limot', 1], ['Menglie', 1], ['Arachova', 1], ['Caromatan', 1], ['Bayanga', 1], ['Sipagimbar', 1], ['Jangkat', 1], ['Santa Maria Zapotitlan', 1], ['Cuapinolito (Azulillo)', 1], ['Tagusao', 1], ['Lucaogou', 1], ['Chalki', 1], ['Coyuca de Benitez', 1], ['Puquina', 1], ['Ryotsu-minato', 1], ['Kerasochori', 1], ['Xingtai', 1], ['Margherita', 1], ['Xinji', 1], ['Traiguen', 1], ['Gereykhanovskoye', 1], ['Banjar Delodrurung', 1], ['Aloindonu', 1], ['Yoichi', 1], ['Sukko', 1], ['Puerto Penasco', 1], ['Shahabad', 1], ['Pola', 1], ['Caliente', 1], ['Genova', 1], ['Varto', 1], ['Truckee', 1], ['Gerash', 1], ['Shuijia', 1], ['Big Lake', 1], ['Stanos', 1], ['Bolands', 1], ['Monte Quemado Airport', 1], ['Mwense', 1], ['Gilan-e Gharb', 1], ['Ishqoshim', 1], ['Khonsa', 1], ['Baraya', 1], ['Qazigund', 1], ['Quito', 1], ['Anton Lizardo', 1], ['Along', 1], ['Cangzhou', 1], ['Uleeglee', 1], ['Pramanta', 1], ['Tanjunggadang', 1], ['Thang', 1], ['Marcabamba', 1], ['Fairbanks', 1], ['Patin-ay', 1], ['Aifat', 1], ['Ngerkeai', 1], ['Karadere', 1], ['Yedisu', 1], ['Catia La Mar', 1], ['Akyazi', 1], ['Arette', 1], ['Biruxong', 1], ['Tawang', 1], ['Granada', 1], ['Uta', 1], ['Wonorejo', 1], ['Hitoyoshi', 1], ['Trebisht-Mucine', 1], ['Patan', 1], ['Santa Margherita di Belice', 1], ['Okuchi-shinohara', 1], ['Sapeken', 1], ['Salton City', 1], ['Bayaguana', 1], ['Namwala', 1], ['Mawu', 1], ['Pendolo', 1], ['Sakado', 1], ['Izotepec', 1], ['Ikata-cho', 1], ['Pullo', 1], ['San Pedro Tulixtlahuaca', 1], ['Ferdows', 1], ['Amasra', 1], ['La Rinconada', 1], ['Nuevo Imperial', 1], ['Cunderdin', 1], ['Sungayang', 1], ['Encontrados', 1], ['Pansoy', 1], ['San Mateo del Mar', 1], ['Kabompo', 1], ['Mandraki', 1], ['Hafnarfjoerdur', 1], ['Socorro', 1], ['Shihuiyao', 1], ['Shirvan', 1], ['Mombetsu', 1], ['Gonen', 1], ['Larreynaga', 1], ['Duvertepe', 1], ['Demirci', 1], ['Menye', 1], ['Mordogan', 1], ['Yaita', 1], ['Bhadrachalam', 1], ['Nurgal', 1], ['Pekalongan', 1], ['Salingogan', 1], ['Sanshandao', 1], ['Quilcas', 1], ['Xitou', 1], ['Suyan', 1], ['Andamarca', 1], ['Rodotopi', 1], ['El Paraiso', 1], ['Celinac', 1], ['Trn', 1], ['Dalgan', 1], ['Aniva', 1], ['Xiaojie', 1], ['Lishan', 1], ['Uitiuhtuan', 1], ['Dianzhong', 1], ['Panique', 1], ['Corcuera', 1], ['Linqiong', 1], ['Cavdarhisar', 1], ['Stirion', 1], ['Nggongi Satu', 1], ['Yarbasan', 1], ['Uchkent', 1], ['Novyy Chirkey', 1], ['Harmod', 1], ['Lope de Vega', 1], ['Chimbote', 1], ['Teploklyuchenka', 1], ['Rio Grande', 1], ['Yura', 1], ['Saint Croix', 1], ['Hingatungan', 1], ['Yudaikelike', 1], ['Tuensang', 1], ['Maraveh Tappeh', 1], ['Pebas', 1], ['Rundeng', 1], ['Mekarjaya', 1], ['Callaguip', 1], ['Berezovyy', 1], ['Dumalneg', 1], ['Kuh Sefid', 1], ['Pena', 1], ['Ituango', 1], ['Kute', 1], ['Pemongkong', 1], ['Tahara', 1], ['Contadora', 1], ['Garmeh', 1], ['Ivrindi', 1], ['Joetsu', 1], ['San Juan Guichicovi', 1], ['Kugri', 1], ['Nibaaf', 1], ['Anticala', 1], ['Taligaman', 1], ['Los Angeles', 1], ['Sulu', 1], ['Marcos', 1], ['Lago Puelo', 1], ['Barg-e Matal', 1], ['Ilicalar', 1], ['Aslanapa', 1], ['Khalilabad', 1], ['Santo Tomas La Union', 1], ['Carhuamayo', 1], ['Sabana Grande de Palenque', 1], ['Tezpur', 1], ['Otsuki', 1], [\"Qa'em Shahr\", 1], ['Cheremushki', 1], ['Boca Chica', 1], ['Liushun', 1], ['Tabou', 1], ['Nezhdaninskoe', 1], ['San Luis Ixcan', 1], ['Sanayca', 1], ['Bastak', 1], ['Qorashina', 1], ['Saint-Augustin', 1], ['Orencik', 1], ['Saposoa', 1], ['Luntai', 1], ['Esso', 1], ['Colipapa', 1], ['San Gabriel Mixtepec', 1], ['Jiwani', 1], ['Tsuruoka', 1], ['Nomhon', 1], ['Xylokastro', 1], ['San Pedro Pochutla', 1], ['Praimutung', 1], ['Joba Arriba', 1], ['Villa del Salvador', 1], ['Imelda', 1], ['Graneros', 1], ['Mbulung', 1], ['Mademang', 1], ['Ngeni', 1], ['Maubasa', 1], ['Sanogasta', 1], ['El Carrizal', 1], ['Gwembe', 1], ['Managua', 1], ['Xindou', 1], ['Falmouth', 1], ['Oakdale', 1], ['Filandia', 1], ['La Fortuna', 1], ['Risaralda', 1], ['Pepeekeo', 1], ['Balzar', 1], ['Tamutuo Gelake', 1], ['Todok', 1], ['Pahenya', 1], ['Depoe Bay', 1], ['Nuevo Urecho', 1], ['Llusco', 1], ['Yongle', 1], ['Comandau', 1], ['San Felipe Tilpam', 1], ['Vetas', 1], ['Shanjeev Home', 1], ['Shamboyacu', 1], ['Lazi', 1], ['Lembongan Kawan', 1], ['Las Juntas', 1], ['Safashahr', 1], ['Kendari', 1], ['Sawirara', 1], ['Karabulak', 1], ['Mariatana', 1], ['Tafi del Valle', 1], ['Payunga', 1], ['Panikihan', 1], ['San Jose de Jachal', 1], ['Tairua', 1], ['Ciudad Sandino', 1], ['Pisaras', 1], ['Sibolga', 1], ['Bayshint', 1], ['Villa de Soto', 1], ['Manastur', 1], ['Baima', 1], ['Labangka Satu', 1], ['Westonaria', 1], ['Perene', 1], ['Cibinong', 1], ['San Jose de Aerocuar', 1], ['Hveragerdi', 1], ['Santa Victoria', 1], ['Bayangol', 1], ['Boca de Cupe', 1], ['Tucuti', 1], ['Pucuro', 1], ['Rancho Viejo (Rancho Nuevo de la Democracia)', 1], ['Mys-Kamennyy', 1], ['Molina', 1], ['Buenaventura', 1], ['Pagsanahan Norte', 1], ['Puro Pinget', 1], ['Tagiura', 1], ['Sainte-Marie', 1], ['Tumbaya', 1], ['Lastoursville', 1], ['Mapiripan', 1], [\"Saint John's\", 1], ['Olafsvik', 1], ['Chicureo Abajo', 1], ['Alpurai', 1], ['Slumbung', 1], ['Tinogasta', 1], ['Guantun', 1], ['Ciampea', 1], ['Sop Moei', 1], ['El Ticui', 1], ['Munai', 1], ['Boconoito', 1], ['Turubeang', 1], ['Malad City', 1], ['Beroroha', 1], ['Turbana', 1], ['Puyca', 1], ['Nuing', 1], ['Marquelia', 1], ['Tekirova', 1], ['Porto Moniz', 1], ['Layka', 1], ['Villa Tupac Amaru', 1], ['Yunguyo', 1], ['Kang-neung', 1], ['Laka', 1], ['Pakokku', 1], ['Port Hedland', 1], ['Bipolo', 1], ['Taimaman', 1], ['Kaem', 1], ['Jeberos', 1], ['Chahuite', 1], ['Beoga', 1], ['Cagdianao', 1], ['Nahura', 1], ['Lice', 1], ['Puerto Supe', 1], ['Paya', 1], ['Lingig', 1], ['Leilani Estates', 1], ['Candoni', 1], ['Keumala', 1], ['Banjar Tambaksari', 1], ['Thermo', 1], ['Pilpichaca', 1], ['Los Amates', 1], ['San Raimundo', 1], ['Correderos', 1], ['Palmar de Cuautla', 1], ['Lubang', 1], ['Bartolome Maso', 1], ['Pekan Bahapal', 1], ['Khulm', 1], ['Wairoa', 1], ['Dededo Village', 1], ['Bangunrejo', 1], ['Youwei', 1], ['Myingyan', 1], ['Molobulahe', 1], ['Kocerin', 1], ['Farashband', 1], ['Haskoy', 1], ['Prato', 1], ['Chiaulis', 1], ['Bosobolo', 1], ['Tengyue', 1], ['Lestans', 1], ['Muarasiau', 1], ['Koffiefontein', 1], ['Penguanzhuang', 1], ['Linxi', 1], ['Kyzyl-Kyya', 1], ['Goyty', 1], ['Olutanga', 1], ['Kalamansig', 1], ['Atocha', 1], ['Simpang Tiga Redelong', 1], ['Sapad', 1], ['Montenars', 1], ['Suojin', 1], ['Isola', 1], ['Venzone', 1], ['Chama', 1], ['San Jeronimo el Grande', 1], ['Wuhai', 1], ['Bocairent', 1], ['Saquisili', 1], ['Quevy-le-Petit', 1], ['Poldokhtar', 1], ['Baylo', 1], ['Gaojingzhuang', 1], ['Trasaghis', 1], ['Seyah Cheshmeh', 1], ['Bayview', 1], ['Ngereklmadel', 1], ['Langgapayung', 1], ['Batken', 1], ['Punta Arenas', 1], ['Frontera', 1], ['Spulber', 1], ['Tapolangu', 1], ['Surcubamba', 1], ['Pichari', 1], ['Panti', 1], ['Ardal', 1], ['Orkney', 1], ['Dapitan', 1], ['Sangiang', 1], ['Datianzhuang', 1], ['Bunol', 1], ['Kizilagac', 1], ['Mach', 1], ['Gomez', 1], ['Gunungsulah', 1], ['Muyaka', 1], ['Lailunggi', 1], ['Cileungsir', 1], ['Boyali', 1], ['Bato', 1], ['Padangcermin', 1], ['Emponas', 1], ['Ospino', 1], ['Ilongero', 1], ['Xekar', 1], ['Marina di Camerota', 1], ['Gwadar', 1], ['Tiquisate', 1], ['Samo', 1], ['Kilometro 40', 1], ['Kukichuo', 1], ['Hamilton', 1], ['Zhabu', 1], ['San Ignacio de Tupile', 1], ['Lipari', 1], ['Nushki', 1], ['Roquetas de Mar', 1], ['Sochos', 1], ['Tlyarata', 1], ['Perreng', 1], ['Boston', 1], ['Kolchikon', 1], ['Qarauyl', 1], ['Berdigestyakh', 1], ['Santa Barbara', 1], ['Divnomorskoye', 1], ['La Mira Tumbiscatio', 1], ['Twante', 1], ['Jombang', 1], ['Igrim', 1], ['Amaga', 1], ['San Agustin Loxicha', 1], ['San Miguel Coatlan', 1], ['Qal`eh-ye Khvajeh', 1], ['Gaeta', 1], ['Aucayacu', 1], ['Nuevo Naranjo', 1], ['San Giorgio', 1], ['Biri', 1], ['Kuche', 1], ['Nyagla', 1], ['Stari Bar', 1], ['Tivat', 1], ['Bangonay', 1], ['Mucumpiz', 1], ['Pandat', 1], ['Churuja', 1], ['Dharchula', 1], ['Achaya', 1], ['Budva', 1], ['Tuerkler', 1], ['Santa Maria Chimalapa', 1], ['Shangpei', 1], ['Kudamatsu', 1], ['Smirnykh', 1], ['Haliut', 1], ['Dalwangan', 1], ['Taquile', 1], ['Norcia', 1], ['Bakanas', 1], ['Mamasa', 1], ['Myanaung', 1], ['Islas Agrarias Grupo A', 1], ['Brawley', 1], ['Loyada', 1], ['Cibongas', 1], ['El Cairo', 1], ['Padangulaktanding', 1], ['Tezu', 1], ['Tabas', 1], ['Tupungato', 1], ['Cotaruse', 1], ['Blackhawk', 1], ['Alofi', 1], ['Khapalu', 1], ['Jiajuedibu', 1], ['Morton', 1], ['Finale', 1], ['Doctor Alberto Oviedo Mota', 1], ['Tubalan', 1], ['Ano Lekhonia', 1], ['Vamvakou', 1], ['El Progreso', 1], ['Puerto Barrios', 1], ['El Triunfo', 1], ['Mawlamyinegyunn', 1], ['Makhjan', 1], ['Kisarazu', 1], ['Taradale', 1], ['Chlef', 1], ['El Attaf', 1], ['Westhaven-Moonstone', 1], ['Las Terrenas', 1], ['Gangtok', 1], ['Cairano', 1], ['Furudate', 1], ['Oued Sly', 1], ['Ertai', 1], ['Koysinceq', 1], ['Kiraman', 1], ['Xianshui', 1], ['Inhambane', 1], ['Korini', 1], ['Kaparellion', 1], ['Erythres', 1], ['Vilia', 1], ['Tecoman', 1], ['Pedini', 1], ['Cabra', 1], ['Burruyacu', 1], ['Aibak', 1], ['Oshnaviyeh', 1], ['Calbuco', 1], ['Laktasi', 1], ['Chambrey', 1], ['Clarin', 1], ['Malibu', 1], ['Dasu', 1], ['Samashki', 1], ['Riobamba', 1], ['Talaya', 1], ['Lodja', 1], ['Eydhafushi', 1], ['Bendoroto', 1], ['Campbellton', 1], ['Danao', 1], ['Pendok', 1], ['Sukabumi', 1], ['Hitachi-Naka', 1], ['Garchitorena', 1], ['Mili', 1], ['Puri', 1], ['Langnga', 1], ['Kayangel', 1], ['San Josecito', 1], ['Waetuwa', 1], ['Pering', 1], ['Kangin', 1], ['Naranjos', 1], ['Conchamarca', 1], ['Darnah', 1], ['Balao', 1], ['Klampis', 1], ['Sinuapa', 1], ['Sawangan', 1], ['Gradishte', 1], ['Bajo Pichanaqui', 1], ['Sheywah', 1], ['Ma`bar', 1], ['Baniona', 1], ['Cholpon-Ata', 1], ['Sipalay', 1], ['Alamada', 1], ['Usseglio', 1], ['Peniche', 1], ['Talise', 1], ['Tutnae', 1], ['Colonia Juarez', 1], ['Tlacoachistlahuaca', 1], ['Lopez Jaena', 1], ['Santa Maria Xadani', 1], ['Nagareyama', 1], ['Mgachi', 1], ['San Rafael', 1], ['Popayan', 1], ['Chiriaco', 1], ['Shucushuyacu', 1], ['Si Sawat', 1], ['Dingalan', 1], ['Nueva Loja', 1], ['Thi Tran Tua Chua', 1], ['Khoa', 1], ['Pejibaye', 1], ['Dimetoka', 1], ['El Viejo', 1], ['Ab Bar', 1], ['Komodo', 1], ['Codajas', 1], ['Radwanice', 1], ['Uenohara', 1], ['Ngeru', 1], ['San Pedro Buenavista', 1], ['Padong', 1], ['Daohe', 1], ['Karaurgan', 1], ['Catamayo', 1], ['Chengguan', 1], ['Eden', 1], ['Tumbiscatio de Ruiz', 1], ['Houk', 1], ['Nangabere', 1], ['Gaoual', 1], ['Yangxiang', 1], ['Tapalang', 1], ['Yantzaza', 1], ['Los Organos', 1], ['Punta Hermosa', 1], ['Qal`ah-ye Shahi', 1], ['Selianitika', 1], ['Pop Shahri', 1], ['Balkanabat', 1], ['Ilabaya', 1], ['Canauay', 1], ['Cipolleto', 1], ['Ngulung Wetan', 1], ['Metkovic', 1], ['La Puerta de San Jose', 1], ['Peuleumat', 1], ['Tocache', 1], ['Vryses', 1], ['Pleasant Point', 1], ['Acatepec', 1], ['Khanaqah', 1], ['Sawoi', 1], ['El Fresno', 1], ['Fishhook', 1], ['Juli', 1], ['Villa Corzo', 1], ['Olur', 1], ['Rosario', 1], ['Bauko', 1], ['Independencia', 1], ['Kulempang', 1], ['Catak', 1], ['Santa Catarina Roatina', 1], ['Lakhipur', 1], ['Cacique', 1], ['Koya', 1], ['Udalguri', 1], ['Vicuna', 1], ['Santiago Ixtaltepec', 1], ['Usevia', 1], ['Melipilla', 1], ['Palpacachi', 1], ['Surabaya', 1], ['Muricay', 1], ['San Pablo', 1], ['Dianweijie', 1], ['Santo Cristo', 1], ['Nea Anchialos', 1], ['Sukumo', 1], ['Konarka', 1], ['Murupara', 1], ['Motuo', 1], ['Mohr', 1], ['Luna', 1], ['Kaka', 1], ['Pantla', 1], ['Shiroi', 1], ['Ambatondrazaka', 1], ['Ciranjang-hilir', 1], ['Palos', 1], ['Niupmetan', 1], ['Kokar', 1], ['Didouche Mourad', 1], ['Qarnabad', 1], ['Velipoje', 1], [\"Saint David's\", 1], ['Margaret River', 1], ['Hukumati Azrah', 1], ['Ridgemark', 1], ['Santa Catarina Ixtahuacan', 1], ['Prince George', 1], ['Dharmsala', 1], ['Khonj', 1], ['Dogansehir', 1], ['Pasirpanjang', 1], ['Mermoz Boabab', 1], ['Rudum', 1], ['Surgu', 1], ['Kigoma', 1], ['Wori', 1], ['Bukid', 1], ['Rohru', 1], ['Churuguara', 1], ['Rio de Jesus', 1], ['Qingshizui', 1], ['Casoca', 1], ['Paralia Vergas', 1], ['Tonacatepeque', 1], ['Horsunlu', 1], ['Teeli', 1], ['Tago', 1], ['Puerto Galilea', 1], ['Bosansko Grahovo', 1], ['Strazhitsa', 1], ['Bilalang', 1], ['Purac', 1], ['Qarqi', 1], [\"Bol'shoy Kamen'\", 1], ['Pimampiro', 1], ['Cayambe', 1], ['Itoigawa', 1], ['Aguilar', 1], ['Canaoalan', 1], ['Lintongnihuta', 1], ['Tarutung', 1], ['Serrezuela', 1], ['Kohima', 1], ['Busdi', 1], ['Cabanglasan', 1], ['Vestmannaeyjar', 1], ['Daniel Flores', 1], ['Paracelis', 1], ['Subtanjalla', 1], ['Caminaca', 1], ['San Pedro Coxcaltepec Cantaros', 1], ['Tocota', 1], ['Khan Neshin', 1], ['Quesada', 1], ['South San Gabriel', 1], ['Mollepata', 1], ['Kabare', 1], ['Sonsorol Village', 1], ['Chichigalpa', 1], ['Bugko', 1], ['Kabir', 1], ['Mobara', 1], [\"Arzu'iyeh\", 1], ['Shanshan', 1], ['Teno', 1], ['Ndroq', 1], ['Alotenango', 1], ['Jahedpur', 1], ['Oruro', 1], ['San Vito', 1], ['Chofugaoka', 1], ['Likak', 1], ['Batutering', 1], ['Sentani', 1], ['Esik', 1], ['Bagong Sikat', 1], ['Tsagaantungi', 1], ['Maloma', 1], ['Maloy', 1], ['Castle Dale', 1], ['Cigarogol', 1], ['Lahan', 1], ['Bonthe', 1], ['El Cacao', 1], ['Gaitanion', 1], ['Chiffa', 1], ['Mengdong', 1], ['Culasi', 1], ['Mavis Bank', 1], ['Polange', 1], ['Jonquiere', 1], ['Condoto', 1], ['Kasukabe', 1], ['Lashio', 1], ['San Rafael del Yuma', 1], ['Moires', 1], ['Lala', 1], ['Gartog', 1], ['Barrow', 1], ['Narita', 1], ['Gengma', 1], ['Huurch', 1], ['Poblado Cinco', 1], ['Sarankhola', 1], ['Muang La', 1], ['Poman', 1], ['Blang Dalam', 1], ['Patea', 1], ['Maitum', 1], ['Mabay', 1], ['Salvacion', 1], ['Filiatra', 1], ['Enarotali', 1], ['Barkam', 1], ['Mae Ai', 1], ['Fang', 1], ['Day Valley', 1], ['Aoshi', 1], ['Diriamba', 1], ['Abra Pampa', 1], ['Xingang', 1], ['Iquipi', 1], ['Iqaluit', 1], ['Agat Village', 1], ['Gangba', 1], ['Nunkurus', 1], ['Firuzkuh', 1], ['Cuenca', 1], ['Caleta Cruz', 1], ['Cidreira', 1], ['Villa Yapacani', 1], ['Mbarungkeli', 1], ['Mombasa', 1], ['Paquera', 1], ['Puntarenas', 1], ['Jagupit', 1], ['Coronel', 1], ['Avigliano', 1], ['Mto wa Mbu', 1], ['Paulesti', 1], ['Naruja', 1], ['Manika', 1], ['Cilengkrang', 1], ['Bokat', 1], ['Adela', 1], ['Le Vauclin', 1], ['Macapsing', 1], ['Halog West', 1], ['Caronoan West', 1], ['Busilak', 1], ['Altinyayla', 1], ['Loacan', 1], ['Da-an Sur', 1], ['Zhongxin', 1], ['Pedernales', 1], ['Salalah', 1], ['Zahedan', 1], ['Waipawa', 1], ['Bridgeport', 1], ['Tidman', 1], ['Pampacolca', 1], ['Sangir', 1], ['Salento', 1], ['Hrvace', 1], ['Mont-Dore', 1], ['Ahram', 1], ['March', 1], ['Aravissos', 1], ['Bayan Gol', 1], ['La Union', 1], ['Curup', 1], ['Los Chiles', 1], ['Jucuaran', 1], ['Qubodiyon', 1], ['Fenoarivo Be', 1], ['Limon', 1], ['Ambrolauri', 1], ['Kahaluu-Keauhou', 1], ['Carapo', 1], ['Matara', 1], ['Laiponda', 1], ['Chojata', 1], ['Barranco', 1], ['Santa Lucia', 1], ['Babo-Pangulo', 1], ['Manibaug Pasig', 1], ['Sierra Madre', 1], ['Monrovia', 1], ['Padang', 1], ['Lares', 1], ['Livezile', 1], ['Baile Herculane', 1], [\"'Aqrah\", 1], ['Aucara', 1], ['Yasugicho', 1], ['Santa Juliana', 1], ['Wanganui', 1], ['Patzun', 1], ['Krida', 1], ['Uttarkashi', 1], ['Behbahan', 1], ['Ciacova', 1], ['Yumani', 1], ['Totoral', 1], ['Lila', 1], ['Chiquinquira', 1], ['Kalmunai', 1], ['Sabana Buey', 1], ['Higashine', 1], ['Khugyani', 1], ['`Arta', 1], ['Cimin', 1], ['Dagyolu', 1], ['Besao', 1], ['Sky Valley', 1], ['Samanco', 1], ['Massy', 1], ['San Clemente', 1], ['Lachi', 1], ['Simu', 1], ['Chirilagua', 1], ['Poigar', 1], ['Amahai', 1], ['California City', 1], ['Nangapanda', 1], ['Pusum', 1], ['El Calafate', 1], ['Miyazu', 1], ['Palestina', 1], ['Millicent', 1], ['Jinghai', 1], ['Madinat Sittah Uktubar', 1], ['Cangkeuteuk Sabrang', 1], ['Bellavista', 1], [\"Step'antsminda\", 1], ['Degirmendere', 1], ['Kirra', 1], ['Vanj', 1], ['Rasak', 1], ['Nunsena', 1], ['Burum', 1], ['Easington', 1], ['Kitami', 1], ['Baoji', 1], ['Paya Dapur', 1], ['Hejing', 1], ['Pamplona', 1], ['Pemana', 1], ['Temeni', 1], ['Ngamring', 1], ['Gutad', 1], ['Laraos', 1], ['Pastrana', 1], ['Big Pine', 1], ['Maagnas', 1], ['Patra', 1], ['Puerto Rondon', 1], ['Omdurman', 1], ['Dhahab', 1], ['Isafjoerdur', 1], ['Guanagazapa', 1], ['Ashkasham', 1], ['Dese', 1], ['Ausa', 1], ['Malayal', 1], ['Cabay', 1], ['Jolotichan', 1], ['Yanglong', 1], ['Pishin', 1], ['Tenga', 1], ['Wakuya', 1], ['Libmanan', 1], ['Mapanas', 1], ['Tekeli', 1], ['Santa Marina Salina', 1], ['Northridge', 1], ['Jailolo', 1], ['Afton', 1], ['Bundibugyo', 1], ['Kavar', 1], ['Santo Domingo Zanatepec', 1], ['San Vicente la Mesilla', 1], ['Tadjoura', 1], ['Buluang', 1], ['Mazar-e Sharif', 1], ['Cabacao', 1], ['Balagon', 1], ['Pumai', 1], ['Ajuchitlan del Progreso', 1], ['Panormos', 1], ['Rojhan', 1], ['Toribio', 1], ['Reyes', 1], ['Rapu-Rapu', 1], ['Firuzabad', 1], ['Yag La', 1], ['Guananico', 1], [\"Vrangel'\", 1], ['Putyatin', 1], ['Sig', 1], ['Chara', 1], ['San Miguel Quetzaltepec', 1], ['Demir Hisar', 1], ['Ma-kung', 1], ['Tingo Maria', 1], ['Alumine', 1], ['Victoria', 1], ['Sanga-Sanga', 1], ['Humboldt Hill', 1], ['Eman', 1], ['Akashi', 1], ['Calimita', 1], ['Polis', 1], ['Anyar', 1], ['Naranjito', 1], ['Alpine', 1], ['Aiani', 1], ['Takikawa', 1], ['Anchorage', 1], ['Wana', 1], ['Watowiti', 1], ['Kyzyl-Khaya', 1], ['Kultuk', 1], ['Long Peso', 1], ['Las Navas', 1], ['Haishiwan', 1], ['Eauripik', 1], ['Neira', 1], ['Lerek', 1], ['Hawera', 1], ['Impfondo', 1], ['Dinar', 1], ['Uchqurghon Shahri', 1], ['El Colomo', 1], ['Ocozocoautla de Espinosa', 1], ['Cuajinicuilapa de Santa Maria', 1], ['Taksimo', 1], ['Balpayam', 1], ['Qingshuihe', 1], ['Las Canas', 1], ['Lijiang', 1], ['Latung', 1], ['Santa Rosa de Lima', 1], ['Gotemba', 1], ['Lasite', 1], ['Puerto Escondido', 1], ['Pujili', 1], ['Kremasti', 1], ['Labayug', 1], ['Baotou', 1], ['Palapag', 1], [\"Tigil'\", 1], ['Megalo Chorio', 1], ['San Miguel de Salcedo', 1], ['Parrita', 1], [\"'Ain Benian\", 1], ['Chichas', 1], ['Altagracia', 1], ['Soufriere', 1], ['Basilisa', 1], ['Bambol', 1], ['Lorino', 1], ['Ticaco', 1], ['Riosucio', 1], ['Huaniao', 1], ['Taloy', 1], ['Changma', 1], ['Muramatsu', 1], ['Sugito', 1], ['Tadmur', 1], ['Kazarman', 1], ['Toygarli', 1], ['Dagur', 1], ['Tanarara', 1], ['El Dovio', 1], ['Nir', 1], ['Toyokawa', 1], ['Kushikino', 1], ['Calanasan', 1], ['Argamakmur', 1], ['Karimganj', 1], ['Anini-y', 1], ['Santa Catarina Mita', 1], ['Barela', 1], ['Kosai-shi', 1], ['Suak Bakung', 1], ['El Simbolar', 1], ['Hagi', 1], ['Praia da Vitoria', 1], ['La Breita', 1], ['Baja Mar', 1], ['Derby', 1], ['Beutong Ateuh', 1], ['Izalco', 1], ['Kirando', 1], ['Serravalle di Chienti', 1], ['Nocera Umbra', 1], ['Pinrang', 1], ['Vostok', 1], ['Sugal', 1], ['Valtopina', 1], ['Sellano', 1], ['Tepas', 1], ['Lidoriki', 1], ['Moyogalpa', 1], ['San Sebastian', 1], ['Eresos', 1], ['Sensuntepeque', 1], ['Zhangbei', 1], ['Quebrada Honda', 1], ['Santo Domingo Suchitepequez', 1], ['Santa Maria Huatulco', 1], ['Mashhad', 1], ['Puerto Ocopa', 1], ['Kobarid', 1], ['Madrigal', 1], ['Malfa', 1], ['Mersa Matruh', 1], ['Zangguy', 1], ['Bazar-e Tashkan', 1], ['Dogankent', 1], ['Horta', 1], ['Lerik', 1], ['Hotaka', 1], ['Shizukuishi', 1], ['Lobujya', 1], ['Castelluccio Superiore', 1], ['Amardalay', 1], ['Barisan', 1], ['Mionica', 1], ['Bengga', 1], ['Moa', 1], ['Cordoba', 1], ['Bavtugay', 1], ['Chakaray', 1], ['Rechka-Vydrino', 1], ['Malargue', 1], ['Kizil', 1], ['San Martin de los Andes', 1], ['Pipalkoti', 1], ['Dabajuro', 1], ['Luozigou', 1], ['Homer', 1], ['Otorohanga', 1], ['Petite Riviere Salee', 1], ['Tehuacan', 1], ['Potrerillos', 1], ['Kuala Bintang', 1], ['Goldfield', 1], ['Zaruma', 1], ['Pano Polemidia', 1], ['Geulzuk', 1], ['Kainan', 1], ['Aspropyrgos', 1], ['Kosekoy', 1], ['San Baltazar Loxicha', 1], ['Chontabamba', 1], ['Running Springs', 1], ['Torbat-e Jam', 1], ['Sapanca', 1], ['El Descanso', 1], ['Gaziler', 1], ['Solola', 1], ['Beni Saf', 1], ['Navarro', 1], ['Aloleng', 1], ['Pematangluhur', 1], ['Municipio de Fortul', 1], ['Slavyanka', 1], ['Nargana', 1], ['Geumpang', 1], ['Huehuetan', 1], ['Ierapetra', 1], ['Anatuya', 1], ['Roque', 1], ['Talisayan', 1], ['Orta', 1], ['Mikuni', 1], ['Shibushi', 1], ['Pulauberingin', 1], ['Nueva Era', 1], ['Palas', 1], ['Jolalpan', 1], ['Corn Island', 1], ['Baharly', 1], ['Dulian', 1], ['Wenquan', 1], ['Pedro Carbo', 1], ['Taclobo', 1], ['Nkove', 1], ['Irapa', 1], ['Jovellar', 1], ['Matsue-shi', 1], ['Padedewatu', 1], ['Catubig', 1], ['Amatenango de la Frontera', 1], ['Babakanbungur', 1], ['Aginskoye', 1], ['el hed', 1], ['Fuerte', 1], ['Aksehir', 1], ['Nuevo Milenio Valdivia', 1], ['Daguioman', 1], ['Jiquilpan (Estacion Bonanza)', 1], ['Anjar', 1], ['Barranca', 1], ['Cojutepeque', 1], ['Lampa', 1], ['Longbranch', 1], ['Sindanglaut', 1], ['Arakvaz-e Malekshahi', 1], ['Kure', 1], ['Chilecito', 1], ['Saujil', 1], ['Qiaowa', 1], ['Tecirli', 1], ['Potosi', 1], ['Namsai', 1], ['Balabac', 1], ['San Carlos Sija', 1], ['Ano Kopanakion', 1], ['La Cumbre', 1], ['El Embarcadero', 1], ['Orurillo', 1], ['Yongbei', 1], ['Joaquin Miguel Gutierrez (Margaritas)', 1], ['Alca', 1], ['Chameta', 1], ['Tlacojalpan', 1], ['Sultandagi', 1], ['Cobanlar', 1], ['Cay', 1], ['Maguling', 1], ['Deh-e Salah', 1], ['Wala', 1], ['Gjilan', 1], ['Malya', 1], ['Milos', 1], ['Salamanca', 1], ['Aminga', 1], ['Burang', 1], ['Puerto Obaldia', 1], ['Santa Catarina Loxicha', 1], ['Malabang', 1], ['Razan', 1], ['Laoheishan', 1], ['Yege', 1], ['Saquena', 1], ['Tagolu', 1], ['Cikadu', 1], ['Santa Flavia', 1], ['Masjed Soleyman', 1], ['Goma', 1], ['Sake', 1], ['Larino', 1], ['Casacalenda', 1], ['Salcha', 1], ['Msanga', 1], ['Shakhtersk', 1], ['Kiyevskoye', 1], [\"Yu'erhong\", 1], ['Tabina', 1], ['Plampang', 1], ['Penaron', 1], ['Pulumer', 1], ['Nuevo Vicente Guerrero (El Chichonal)', 1], ['Palanas', 1], ['Ha', 1], ['Komiza', 1], ['Sancak', 1], ['Manavgat', 1], ['Pucusana', 1], ['Isser', 1], ['Dellys', 1], ['Lugovoy', 1], ['Limbuhan', 1], ['Pichigua', 1], ['Boumerdas', 1], ['Camana', 1], ['Tayaman', 1], ['Miaga', 1], ['Avanuorri', 1], ['Gokceada', 1], ['Doganyol', 1], ['Kumanis', 1], ['Khagrachhari', 1], ['Camargo', 1], ['Lunglei', 1], ['Prudhoe Bay', 1], ['Warmare', 1], ['Torata', 1], ['Zavodskoy', 1], ['Tugdan', 1], ['Caloue', 1], ['Novyy Uoyan', 1], ['Taungdwingyi', 1], ['Puerto Plata', 1], ['Nunoa', 1], ['Nanganumba', 1], ['Pantoja', 1], ['Zhaosu', 1], ['Licuan', 1], ['La Esperanza', 1], ['Bam', 1], ['Biaslantang Kaler', 1], ['Divala', 1], ['San Jeronimo Coatlan', 1], ['Ciudad Insurgentes', 1], ['Josefina', 1], ['Arfara', 1], ['Ulapes', 1], ['San Ramon de la Nueva Oran', 1], ['Burgastai', 1], ['Banjar Dauhmarga', 1], ['Santa Maria de Jesus', 1], ['Leni', 1], ['Bantacan', 1], ['Nowshahr', 1], ['Camilaca', 1], ['Santa Catarina Mechoacan', 1], ['Kawerau', 1], ['Babat', 1], ['Datca', 1], ['Sivrice', 1], ['Juchitan de Zaragoza', 1], ['Manamrag', 1], ['Chimbarongo', 1], ['Tandag', 1], ['San Fernando del Valle de Catamarca', 1], ['Sapu Padidu', 1], ['Cockburn Town', 1], ['Shandon', 1], ['Aq Qala', 1], ['Adigrat', 1], ['Gangsha', 1], ['Paltin', 1], ['Nagaoka', 1], ['Tejar', 1], ['Barmash', 1], ['Couva', 1], ['Carti Sugdup', 1], ['Taunggyi', 1], ['Pantai Ceuremen', 1], ['Oren', 1], ['Montecristi', 1], ['Megisti', 1], ['Hakkari', 1], ['Ihu', 1], ['Iwatsuki', 1], ['Tigbao', 1], ['Zaboli', 1], ['San Bartolo', 1], ['Odala', 1], ['Ucuncha', 1], ['Tambo Quemado', 1], ['Zorritos', 1], ['Nanyi', 1], ['Crescent City', 1], ['Progreso', 1], ['Calana', 1], ['Hane', 1], ['Tisma', 1], ['Dillon', 1], ['Toro', 1], ['Cardenas', 1], ['Haswayn', 1], ['Nainggolan', 1], ['Tela', 1], ['Semera', 1], ['Embarcacion', 1], ['Jantho', 1], ['Athmuqam', 1], ['Boca Suno', 1], ['Luntal', 1], ['Samdrup Jongkhar', 1], ['Norman Wells', 1], ['Semirara', 1], ['Azna', 1], ['Jiaqiong', 1], ['Hovd', 1], ['Panjang', 1], ['Jargalant', 1], ['San Blas de los Sauces', 1], ['Ciheras', 1], ['Qarawul', 1], ['Mulege', 1], ['Maipu', 1], ['Santiago Yaitepec', 1], ['Taytayan', 1], ['Port Saint Joe', 1], ['Villa Castelli', 1], ['Maintirano', 1], ['Tauria', 1], ['Waikoloa Village', 1], ['Hawi', 1], [\"Sparta'\", 1], ['Chipispaya', 1], ['Tebingtinggi', 1], ['Nangaraba', 1], ['Viqueque', 1], ['Kotanopan', 1], ['Tamako', 1], ['Pasirnangka', 1], ['Balykchy', 1], ['Vorukh', 1], ['Lucea', 1], ['Gozeli', 1], ['Trevelin', 1], ['Bunia', 1], ['Cungus', 1], ['Simabur', 1], ['Rambatan', 1], ['Sergeyevka', 1], ['Puerto Aisen', 1], ['Jomda', 1], ['Ban Houakhoua', 1], ['Barapas', 1], ['Tamiahua', 1], ['Menghai', 1], ['El Espinal', 1], ['Longido', 1], ['Muhur', 1], ['La Quiaca', 1], ['Siquinala', 1], ['Yablochnyy', 1], ['Ahwar', 1], ['Rengasdengklok', 1], ['Sambelia', 1], ['Bandarban', 1], ['Tiku', 1], ['Malaju', 1], ['Basse-Pointe', 1], ['Kisanga', 1], ['Osh', 1], ['Agios Andreas', 1], ['San Pedro Tapanatepec', 1], ['Wells', 1], ['Yuza', 1], ['Tlacotepec', 1], ['Mianyang', 1], ['Jiannan', 1], ['Zagunao', 1], ['Magong', 1], ['Popova', 1], ['Sipirok', 1], ['Quetame', 1], ['Banqiao', 1], ['Mers el Kebir', 1], ['Kato Mazarakion', 1], ['Mizusawa', 1], ['Morioka-shi', 1], ['Zhongba', 1], ['Tsagaannuur', 1], ['Anahawan', 1], [\"Baykal'sk\", 1], ['Yongding', 1], ['Santa Rosa de Cabal', 1], ['Wuleswali Sayyid Karam', 1], ['Oyskhara', 1], ['Tulaghi', 1], ['Ormara', 1], ['Sabanilla', 1], ['Hattian Bala', 1], ['Tsuma', 1], ['Coppito', 1], [\"San Panfilo d'Ocre\", 1], ['El Limon', 1], ['San Lucas Toliman', 1], ['Umm Lajj', 1], ['Chila de la Sal', 1], ['French Harbor', 1], ['El Porvenir', 1], ['Clyde River', 1], ['Bondoboghila', 1], ['Sagara', 1], ['Villa Hidalgo (El Cubo)', 1], ['Da Qaidam', 1], ['Cikole', 1], ['Zerqan', 1], ['Puerto Cabello', 1], ['Batasan', 1], ['San Miguel', 1], ['Sekartaji', 1], ['Pariaman', 1], ['Putina', 1], ['Paso Nacional', 1], ['Saga', 1], ['Jabonga', 1], ['Mairana', 1], ['Pitai', 1], ['Ejido Saltillo', 1], ['Huallanca', 1], ['Leogane', 1], ['Grangwav', 1], ['Gressier', 1], ['Kamarai', 1], ['Santa Maria Colotepec', 1], ['Tunuyan', 1], ['Kraskino', 1], ['Barillas', 1], ['Yumbel', 1], ['Campo Quijano', 1], ['Rauco', 1], ['Casambalangan', 1], ['Basyurt', 1], ['Molinos', 1], ['Tobi Village', 1], ['Lazarev', 1], ['Guantanamo', 1], ['Bangui', 1], ['Niguelas', 1], ['Duab', 1], ['Nacimiento', 1], ['Egvekinot', 1], ['Las Yaras', 1], ['Moca', 1], ['Egilsstadir', 1], ['Seeley', 1], ['Cikawunggading', 1], ['Kish', 1], ['Torbat-e Heydariyeh', 1], ['Damghan', 1], ['Villa Juarez', 1], ['Chincha Alta', 1], ['Kuroiso', 1], ['Cintalapa de Figueroa', 1], ['Kraljevo', 1], ['Mabiton', 1], ['Jam', 1], ['Asau', 1], ['Kampungbajo', 1], ['Lota', 1], ['Chiguayante', 1], ['Pozo Hondo', 1], ['Necocli', 1], ['Adlay', 1], ['Tono', 1], ['Fujinomiya', 1], ['Poblado 10', 1], ['Marumori', 1], ['Iiyama', 1], ['Tanuma', 1], ['Xitumenzi', 1], ['Atenas', 1], ['Simav', 1], ['Mazo Cruz', 1], ['Kahnuj', 1], ['Kolaka', 1], ['Cayhagan', 1], ['Fortuna', 1], ['Taniwel', 1], ['Louisa', 1], ['Mangan', 1], ['Santa Maria Ixhuatan', 1], ['Cengerli', 1], ['Palma Sola', 1], ['Takhtamygda', 1], ['Asahikawa', 1], ['Golduzu', 1], ['Nilka', 1], ['Prague', 1], ['Edremit', 1], ['Nuevo Balsas', 1], ['Bani', 1], ['Salcedo', 1], ['Mesa', 1], ['Jimalalud', 1], ['McKinley', 1], ['Amdos', 1], ['Tiguib', 1], ['Willow Creek', 1], ['Garza', 1], ['Mobo', 1], ['Aral', 1], ['Acapeteahua', 1], ['Ome', 1], ['Dinagat', 1], ['Togane', 1], ['Humay', 1], ['Mamrux', 1], ['Rasht', 1], ['Massa Finalese', 1], ['Batanovtsi', 1], ['Medolla', 1], ['San Possidonio', 1], ['Simpang', 1], ['Unon', 1], ['OEluedeniz', 1], ['Sidorejo', 1], ['Opunake', 1], ['Khorugh', 1], ['Falam', 1], ['Plan de Agua Prieta', 1], ['Valencia', 1], ['Belokany', 1], ['Tinajas 1ra. Seccion', 1], ['Metlakatla', 1], ['Mawa', 1], ['Padalarang', 1], ['Tournavista', 1], ['Caliling', 1], ['Arcelia', 1], ['Morrope', 1], ['Sterling', 1], ['Avalon', 1], ['Monywa', 1], ['Dranda', 1], ['Kegen', 1], ['Yacuanquer', 1], ['Numata', 1], ['Fraijanes', 1], ['Tambulatana', 1], ['Bikondini', 1], ['Khvormuj', 1], ['Sumoto', 1], ['Muping', 1], [\"Qarghah'i\", 1], ['Bhadarwah', 1], ['Cahuacho', 1], ['Cotabambas', 1], ['Greenville', 1], [\"Bulung'ur\", 1], ['Sieyic', 1], ['Banawa', 1], ['Linao', 1], ['Ciudad de Huitzuco', 1], ['Starobachaty', 1], ['Celala', 1], ['Rusip', 1], ['Chabu', 1], ['Wangda', 1], ['Benzilan', 1], ['Atiquipa', 1], ['Sagbayan', 1], ['Buenavista', 1], ['Loon', 1], ['Moriya', 1], ['Chiba', 1], ['Borazjan', 1], ['Tibanbang', 1], ['Okurcalar', 1], ['Novita', 1], ['Hatillo', 1], ['Masterton', 1], ['Adipala', 1], ['Sami', 1], ['Padilla', 1], ['Batutanata', 1], ['Hikari', 1], ['Ydra', 1], ['Valle San Francisco', 1], ['Phan', 1], ['Paradip Garh', 1], ['Kamariotissa', 1], ['Shiraoi', 1], ['Abasolo del Valle', 1], ['Bordj el Kiffan', 1], ['Daliyuan', 1], ['American Canyon', 1], ['Upahuacho', 1], ['Gefyra', 1], ['San Francisco', 1], ['Suchilapan del Rio', 1], ['San Pedro Huamelula', 1], ['Intipuca', 1], ['Akureyri', 1], ['Shush', 1], ['El Angel', 1], ['Khawhai', 1], ['Panciu', 1], ['Pointe-Noire', 1], ['Cagayancillo', 1], ['Hokitika', 1], ['Subic Bay Freeport Zone', 1], ['Manuk Mangkaw', 1], ['San Francisco El Alto', 1], ['Caldono', 1], ['Pandan Niog', 1], ['Wakefield', 1], ['Banepa', 1], ['Xegar', 1], ['Paso Real de Sarabia', 1], ['Camgyai', 1], ['Rantaupangiang', 1], ['Ranau', 1], ['Guma', 1], ['Usuki', 1], ['Union Choco', 1], ['Rainbow Beach', 1], ['Tonala', 1], ['Sorong', 1], ['Balitoc', 1], ['Dajal', 1], ['Darayim', 1], ['Paitoko', 1], ['Quilino', 1], ['Fukuecho', 1], ['Nidri', 1], ['La Concordia', 1], ['Caimancito', 1], ['Chayek', 1], ['Saint-Pierre', 1], ['Bishnupur', 1], ['Rishiri Town', 1], ['Charagua', 1], ['Dongtan', 1], ['Al Hoceima', 1], ['Wailiang', 1], ['San Miguel del Puerto', 1], ['Uto', 1], ['Kikuchi', 1], ['Tanjung Raja', 1], ['Chaman', 1], ['Aleksandrovsk-Sakhalinskiy', 1], ['Cabanaconde', 1], ['Bowen', 1], ['Accumoli', 1], ['Castelsantangelo sul Nera', 1], ['Pawnee', 1], ['Causwagan', 1], ['Nsunga', 1], ['La Paz Centro', 1], ['Souillac', 1], ['Nagarote', 1], ['Asprangeloi', 1], ['Aduo', 1], ['Pointe Michel', 1], ['Visso', 1], ['Ustica', 1], ['Colombia', 1], ['Curico', 1], ['Famatina', 1], ['Kepanjen', 1], ['Villa Aberastain', 1], ['Vilavila', 1], ['Pante Raja', 1]]\n","['`Ohonua', 'Grytviken', 'Hihifo', 'Haveluloto', \"Kuril'sk\"]\n"],"name":"stdout"}]},{"metadata":{"id":"lXGbgLsNCwNy","colab_type":"code","colab":{}},"cell_type":"code","source":["#Pega os dados de cada país para exibir no gráfico\n","local1 = terremotos.loc[terremotos[\"locais\"] == locais_terremotos[0]].head()\n","local2 = terremotos.loc[terremotos[\"locais\"] == locais_terremotos[1]].head()\n","local3 = terremotos.loc[terremotos[\"locais\"] == locais_terremotos[2]].head()\n","local4 = terremotos.loc[terremotos[\"locais\"] == locais_terremotos[3]].head()\n","local5 = terremotos.loc[terremotos[\"locais\"] == locais_terremotos[4]].head()\n"],"execution_count":0,"outputs":[]},{"metadata":{"id":"TA2QbJ2_JDd8","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":519},"outputId":"f2de8139-8c3d-4781-ff2f-aabe5af11635","executionInfo":{"status":"ok","timestamp":1540780634679,"user_tz":180,"elapsed":555,"user":{"displayName":"Larissa Moura","photoUrl":"https://lh6.googleusercontent.com/-chCXhCLWwVI/AAAAAAAAAAI/AAAAAAAAAEM/hietW_b-4Og/s64/photo.jpg","userId":"03306577723881028172"}}},"cell_type":"code","source":["#Gerando os graficos\n","import folium\n","\n","m = folium.Map(\n","    zoom_start=1,\n","    tiles='Stamen Terrain',\n","    width='100%',\n","    height='100%'\n",")\n","folium.Marker([local1[\"latitude\"][74], local1[\"longitude\"][74]], popup='<i>1º maior ocorrência</i>').add_to(m)\n","folium.Marker([local2[\"latitude\"][3], local2[\"longitude\"][3]], popup='<b>2º maior ocorrência</b>').add_to(m)\n","folium.Marker([local3[\"latitude\"][61], local3[\"longitude\"][61]], popup='<b>3º maior ocorrência</b>').add_to(m)\n","folium.Marker([local4[\"latitude\"][154], local4[\"longitude\"][154]], popup='<b>4º maior ocorrência</b>').add_to(m)\n","folium.Marker([local5[\"latitude\"][110], local5[\"longitude\"][110]], popup='<b>5º maior ocorrência</b>').add_to(m)\n","m"],"execution_count":83,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div style=\"width:100%;\"><div style=\"position:relative;width:100%;height:0;padding-bottom:60%;\"><iframe src=\"data:text/html;charset=utf-8;base64,\" style=\"position:absolute;width:100%;height:100%;left:0;top:0;border:none !important;\" allowfullscreen webkitallowfullscreen mozallowfullscreen></iframe></div></div>"],"text/plain":["<folium.folium.Map at 0x7f467ffef2e8>"]},"metadata":{"tags":[]},"execution_count":83}]},{"metadata":{"id":"fK9s9y-EPRfp","colab_type":"text"},"cell_type":"markdown","source":["- Após a visualização do mapa, podemos perceber que todas as cinco regiões são ilhas;\n","- Percebemos que três das regiões mais afetadas, ficam nas ilhas do Pacífico;\n","- A formação destas ilhas se deu por influência da atividade sísmica. "]},{"metadata":{"id":"xDT0KHiAHLhW","colab_type":"text"},"cell_type":"markdown","source":["# Atividade vulcânica\n","\n","(NATÁLIA)\n","\n","Poderia o movimento das placas tectônicas influenciar na erupção de vulcões? Outro [dataset](https://www.kaggle.com/texasdave/volcano-eruptions) com informações sobre atividade vulcânicas ao redor do mundo de 2010 até 2016 foi modificado para analisar que países tiveram maior.\n","\n","\n","\n"]},{"metadata":{"id":"N2E_g9R3JXnJ","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":290},"outputId":"f39464ca-db46-4361-c317-06edba220766","executionInfo":{"status":"ok","timestamp":1540795274488,"user_tz":180,"elapsed":612,"user":{"displayName":"natalia brito","photoUrl":"https://lh5.googleusercontent.com/-R88XQR2c4H4/AAAAAAAAAAI/AAAAAAAAANs/MrBMmeqpMNE/s64/photo.jpg","userId":"00706747172851300870"}}},"cell_type":"code","source":["import plotly as py\n","import plotly.graph_objs as go\n","\n","import numpy as np\n","import pandas as pd\n","\n","# call everytime a new offline plot has to be done with plotly.\n","# from: https://stackoverflow.com/a/47230966\n","def configure_plotly_browser_state():\n","  import IPython\n","  display(IPython.core.display.HTML('''\n","        <script src=\"/static/components/requirejs/require.js\"></script>\n","        <script>\n","          requirejs.config({\n","            paths: {\n","              base: '/static/base',\n","              plotly: 'https://cdn.plot.ly/plotly-latest.min.js?noext',\n","            },\n","          });\n","        </script>\n","        '''))\n","\n","# original volcano dataset\n","volcanos = pd.read_csv(\"volcano_data_2010.csv\", encoding='latin-1')\n","volcanos.head()"],"execution_count":10,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Year</th>\n","      <th>Month</th>\n","      <th>Day</th>\n","      <th>TSU</th>\n","      <th>EQ</th>\n","      <th>Name</th>\n","      <th>Location</th>\n","      <th>Country</th>\n","      <th>Latitude</th>\n","      <th>Longitude</th>\n","      <th>...</th>\n","      <th>TOTAL_DEATHS</th>\n","      <th>TOTAL_DEATHS_DESCRIPTION</th>\n","      <th>TOTAL_MISSING</th>\n","      <th>TOTAL_MISSING_DESCRIPTION</th>\n","      <th>TOTAL_INJURIES</th>\n","      <th>TOTAL_INJURIES_DESCRIPTION</th>\n","      <th>TOTAL_DAMAGE_MILLIONS_DOLLARS</th>\n","      <th>TOTAL_DAMAGE_DESCRIPTION</th>\n","      <th>TOTAL_HOUSES_DESTROYED</th>\n","      <th>TOTAL_HOUSES_DESTROYED_DESCRIPTION</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>2010</td>\n","      <td>1</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>Tungurahua</td>\n","      <td>Ecuador</td>\n","      <td>Ecuador</td>\n","      <td>-1.467</td>\n","      <td>-78.442</td>\n","      <td>...</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>1.0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2010</td>\n","      <td>3</td>\n","      <td>31.0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>Eyjafjallajokull</td>\n","      <td>Iceland-S</td>\n","      <td>Iceland</td>\n","      <td>63.630</td>\n","      <td>-19.620</td>\n","      <td>...</td>\n","      <td>2.0</td>\n","      <td>1.0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>2010</td>\n","      <td>5</td>\n","      <td>27.0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>Pacaya</td>\n","      <td>Guatemala</td>\n","      <td>Guatemala</td>\n","      <td>14.381</td>\n","      <td>-90.601</td>\n","      <td>...</td>\n","      <td>1.0</td>\n","      <td>1.0</td>\n","      <td>3.0</td>\n","      <td>1.0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>1.0</td>\n","      <td>3.0</td>\n","      <td>1.0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>2010</td>\n","      <td>5</td>\n","      <td>29.0</td>\n","      <td>TSU</td>\n","      <td>EQ</td>\n","      <td>Sarigan</td>\n","      <td>Mariana Is-C Pacific</td>\n","      <td>United States</td>\n","      <td>16.708</td>\n","      <td>145.780</td>\n","      <td>...</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>2010</td>\n","      <td>8</td>\n","      <td>6.0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>Karangetang [Api Siau]</td>\n","      <td>Sangihe Is-Indonesia</td>\n","      <td>Indonesia</td>\n","      <td>2.780</td>\n","      <td>125.480</td>\n","      <td>...</td>\n","      <td>4.0</td>\n","      <td>1.0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>5.0</td>\n","      <td>1.0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>1.0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>5 rows × 36 columns</p>\n","</div>"],"text/plain":["   Year  Month   Day  TSU   EQ                    Name              Location  \\\n","0  2010      1   NaN  NaN  NaN              Tungurahua               Ecuador   \n","1  2010      3  31.0  NaN  NaN        Eyjafjallajokull             Iceland-S   \n","2  2010      5  27.0  NaN  NaN                  Pacaya             Guatemala   \n","3  2010      5  29.0  TSU   EQ                 Sarigan  Mariana Is-C Pacific   \n","4  2010      8   6.0  NaN  NaN  Karangetang [Api Siau]  Sangihe Is-Indonesia   \n","\n","         Country  Latitude  Longitude                 ...                  \\\n","0        Ecuador    -1.467    -78.442                 ...                   \n","1        Iceland    63.630    -19.620                 ...                   \n","2      Guatemala    14.381    -90.601                 ...                   \n","3  United States    16.708    145.780                 ...                   \n","4      Indonesia     2.780    125.480                 ...                   \n","\n","   TOTAL_DEATHS TOTAL_DEATHS_DESCRIPTION TOTAL_MISSING  \\\n","0           NaN                      NaN           NaN   \n","1           2.0                      1.0           NaN   \n","2           1.0                      1.0           3.0   \n","3           NaN                      NaN           NaN   \n","4           4.0                      1.0           NaN   \n","\n","  TOTAL_MISSING_DESCRIPTION  TOTAL_INJURIES TOTAL_INJURIES_DESCRIPTION  \\\n","0                       NaN             NaN                        NaN   \n","1                       NaN             NaN                        NaN   \n","2                       1.0             NaN                        NaN   \n","3                       NaN             NaN                        NaN   \n","4                       NaN             5.0                        1.0   \n","\n","   TOTAL_DAMAGE_MILLIONS_DOLLARS  TOTAL_DAMAGE_DESCRIPTION  \\\n","0                            NaN                       1.0   \n","1                            NaN                       NaN   \n","2                            NaN                       1.0   \n","3                            NaN                       NaN   \n","4                            NaN                       NaN   \n","\n","   TOTAL_HOUSES_DESTROYED  TOTAL_HOUSES_DESTROYED_DESCRIPTION  \n","0                     NaN                                 NaN  \n","1                     NaN                                 NaN  \n","2                     3.0                                 1.0  \n","3                     NaN                                 NaN  \n","4                     NaN                                 1.0  \n","\n","[5 rows x 36 columns]"]},"metadata":{"tags":[]},"execution_count":10}]},{"metadata":{"colab_type":"code","outputId":"e9ce2f24-0b47-4a2f-fb45-48f9222104cf","executionInfo":{"status":"ok","timestamp":1540789603011,"user_tz":180,"elapsed":635,"user":{"displayName":"natalia brito","photoUrl":"https://lh5.googleusercontent.com/-R88XQR2c4H4/AAAAAAAAAAI/AAAAAAAAANs/MrBMmeqpMNE/s64/photo.jpg","userId":"00706747172851300870"}},"id":"xTrQ8PmfTQWv","colab":{"base_uri":"https://localhost:8080/","height":206}},"cell_type":"code","source":["# create dataframe \"df_country\" from series (all countries from \"volcanos\")\n","df_country = volcanos['Country'].value_counts().to_frame()\n","# number of unique entries/countries\n","entries = df_country.shape[0]\n","# turn previous index into column \"code\"\n","df_country[\"code\"] = df_country.axes[0]\n","# set new numeric index and assign resulting dataframe to \"volc_activity\"\n","volc_activity = df_country.set_axis([i for i in range(entries)],\n","                     axis='index',\n","                     inplace=False)\n","# renaming columns\n","volc_activity = volc_activity.rename(index=str,\n","                               columns={\"Country\": \"VOLCANIC_ACTIVITY\",\n","                                        \"code\": \"COUNTRY\"})\n","\n","# dataframe with country codes for ploty\n","plotly_3let_code = pd.read_csv(\"https://raw.githubusercontent.com/plotly/datasets/master/2014_world_gdp_with_codes.csv\")\n","# merging datasets\n","volc_activity = volc_activity.merge(plotly_3let_code)\n","\n","volc_activity.head()"],"execution_count":0,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>VOLCANIC_ACTIVITY</th>\n","      <th>COUNTRY</th>\n","      <th>GDP (BILLIONS)</th>\n","      <th>CODE</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>26</td>\n","      <td>Indonesia</td>\n","      <td>856.1</td>\n","      <td>IDN</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>7</td>\n","      <td>United States</td>\n","      <td>17420.0</td>\n","      <td>USA</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>5</td>\n","      <td>Japan</td>\n","      <td>4770.0</td>\n","      <td>JPN</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>3</td>\n","      <td>Philippines</td>\n","      <td>284.6</td>\n","      <td>PHL</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>3</td>\n","      <td>Ecuador</td>\n","      <td>100.5</td>\n","      <td>ECU</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["   VOLCANIC_ACTIVITY        COUNTRY  GDP (BILLIONS) CODE\n","0                 26      Indonesia           856.1  IDN\n","1                  7  United States         17420.0  USA\n","2                  5          Japan          4770.0  JPN\n","3                  3    Philippines           284.6  PHL\n","4                  3        Ecuador           100.5  ECU"]},"metadata":{"tags":[]},"execution_count":2}]},{"metadata":{"id":"0qhP1LBPjNJY","colab_type":"text"},"cell_type":"markdown","source":["### Choropleth dos vulcões"]},{"metadata":{"id":"FG2QOMAQJYmQ","colab_type":"code","colab":{"resources":{"http://localhost:8080/static/components/requirejs/require.js":{"data":"","ok":true,"headers":[["content-type","text/javascript"]],"status":200,"status_text":"OK"}},"base_uri":"https://localhost:8080/","height":542},"outputId":"3f987f6a-7bb5-44ed-b321-ec77dc9e45cb","executionInfo":{"status":"ok","timestamp":1540789617249,"user_tz":180,"elapsed":620,"user":{"displayName":"natalia brito","photoUrl":"https://lh5.googleusercontent.com/-R88XQR2c4H4/AAAAAAAAAAI/AAAAAAAAANs/MrBMmeqpMNE/s64/photo.jpg","userId":"00706747172851300870"}}},"cell_type":"code","source":["# preparing to plot choropleth with plotly\n","\n","df = volc_activity\n","\n","data = [ dict(\n","        type = 'choropleth',\n","        locations = df['CODE'],\n","        z = df['VOLCANIC_ACTIVITY'],\n","        text = df['COUNTRY'],\n","        colorscale = [[0,\"rgb(5, 10, 172)\"],[0.35,\"rgb(40, 60, 190)\"],[0.5,\"rgb(70, 100, 245)\"],\\\n","            [0.6,\"rgb(90, 120, 245)\"],[0.7,\"rgb(106, 137, 247)\"],[1,\"rgb(220, 220, 220)\"]],\n","        autocolorscale = True,\n","        marker = dict(\n","            line = dict (\n","                color = 'rgb(180,180,180)',\n","                width = 0.5\n","            ) ),\n","        colorbar = dict(\n","            autotick = False,\n","            title = 'Vulcan<br>Activity'),\n","      ) ]\n","\n","layout = dict(\n","    title = 'Vulcan Activity from 2010 to 2016<br>Source:\\\n","            <a href=\"https://www.kaggle.com/texasdave/volcano-eruptions\">\\\n","            Kaggle</a>',\n","    geo = dict(\n","        showframe = True,\n","        showcoastlines = True,\n","        showcountries = True,\n","        projection = dict(\n","            type = 'Mercator'\n","        )\n","    )\n",")\n","\n","fig = dict( data=data, layout=layout )\n","\n","# offline plotting\n","py.offline.init_notebook_mode(connected=True)\n","configure_plotly_browser_state()\n","py.offline.iplot( fig, validate=False, filename='d3-world-map' )"],"execution_count":3,"outputs":[{"output_type":"display_data","data":{"text/html":["<script>requirejs.config({paths: { 'plotly': ['https://cdn.plot.ly/plotly-latest.min']},});if(!window.Plotly) {{require(['plotly'],function(plotly) {window.Plotly=plotly;});}}</script>"],"text/plain":["<IPython.core.display.HTML object>"]},"metadata":{"tags":[]}},{"output_type":"display_data","data":{"text/html":["\n","        <script src=\"/static/components/requirejs/require.js\"></script>\n","        <script>\n","          requirejs.config({\n","            paths: {\n","              base: '/static/base',\n","              plotly: 'https://cdn.plot.ly/plotly-latest.min.js?noext',\n","            },\n","          });\n","        </script>\n","        "],"text/plain":["<IPython.core.display.HTML object>"]},"metadata":{"tags":[]}},{"output_type":"display_data","data":{"text/html":["<div id=\"2f34486e-7113-46e8-b36d-dc46df2207b9\" style=\"height: 525px; width: 100%;\" class=\"plotly-graph-div\"></div><script type=\"text/javascript\">require([\"plotly\"], function(Plotly) { window.PLOTLYENV=window.PLOTLYENV || {};window.PLOTLYENV.BASE_URL=\"https://plot.ly\";Plotly.newPlot(\"2f34486e-7113-46e8-b36d-dc46df2207b9\", [{\"type\": \"choropleth\", \"locations\": [\"IDN\", \"USA\", \"JPN\", \"PHL\", \"ECU\", \"PNG\", \"ITA\", \"CHL\", \"NZL\", \"VUT\", \"ISL\", \"GTM\", \"ERI\", \"RUS\", \"PER\"], \"z\": [26, 7, 5, 3, 3, 3, 2, 2, 2, 2, 2, 2, 1, 1, 1], \"text\": [\"Indonesia\", \"United States\", \"Japan\", \"Philippines\", \"Ecuador\", \"Papua New Guinea\", \"Italy\", \"Chile\", \"New Zealand\", \"Vanuatu\", \"Iceland\", \"Guatemala\", \"Eritrea\", \"Russia\", \"Peru\"], \"colorscale\": [[0, \"rgb(5, 10, 172)\"], [0.35, \"rgb(40, 60, 190)\"], [0.5, \"rgb(70, 100, 245)\"], [0.6, \"rgb(90, 120, 245)\"], [0.7, \"rgb(106, 137, 247)\"], [1, \"rgb(220, 220, 220)\"]], \"autocolorscale\": true, \"marker\": {\"line\": {\"color\": \"rgb(180,180,180)\", \"width\": 0.5}}, \"colorbar\": {\"autotick\": false, \"title\": \"Vulcan<br>Activity\"}}], {\"title\": \"Vulcan Activity from 2010 to 2016<br>Source:            <a href=\\\"https://www.kaggle.com/texasdave/volcano-eruptions\\\">            Kaggle</a>\", \"geo\": {\"showframe\": true, \"showcoastlines\": true, \"showcountries\": true, \"projection\": {\"type\": \"Mercator\"}}}, {\"showLink\": true, \"linkText\": \"Export to plot.ly\"})});</script>"],"text/plain":["<IPython.core.display.HTML object>"]},"metadata":{"tags":[]}}]},{"metadata":{"id":"rQp8QTaVhl3h","colab_type":"text"},"cell_type":"markdown","source":["Por outro lado, utilizando o dataset de terremotos, conseguimos um choropleth durante o mesmo periodo."]},{"metadata":{"id":"2HWIRn21h_WO","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":469},"outputId":"9f05c3e2-5325-467e-e24f-f17797b6a50e","executionInfo":{"status":"ok","timestamp":1540795290549,"user_tz":180,"elapsed":580,"user":{"displayName":"natalia brito","photoUrl":"https://lh5.googleusercontent.com/-R88XQR2c4H4/AAAAAAAAAAI/AAAAAAAAANs/MrBMmeqpMNE/s64/photo.jpg","userId":"00706747172851300870"}}},"cell_type":"code","source":["#Removendo terremotos de antes de 2010\n","\n","tm2010_2016 = terremotos[terremotos[\"date\"] >= pd.Timestamp('2010-01-1 00:00:00')]\n","tm2010_2016.info()"],"execution_count":11,"outputs":[{"output_type":"stream","text":["<class 'pandas.core.frame.DataFrame'>\n","Int64Index: 3574 entries, 19838 to 23411\n","Data columns (total 21 columns):\n","date                          3574 non-null datetime64[ns]\n","time                          3574 non-null object\n","latitude                      3574 non-null float64\n","longitude                     3574 non-null float64\n","type                          3574 non-null object\n","depth                         3574 non-null float64\n","depth_error                   2137 non-null float64\n","depth_seismic_stations        2008 non-null float64\n","magnitude                     3574 non-null float64\n","magnitude_type                3574 non-null object\n","magnitude_error               301 non-null float64\n","magnitude_seismic_stations    500 non-null float64\n","azimuthal_gap                 3533 non-null float64\n","horizontal_distance           1537 non-null float64\n","horizontal_error              1077 non-null float64\n","root_mean_square              3492 non-null float64\n","id                            3574 non-null object\n","source                        3574 non-null object\n","location_source               3574 non-null object\n","magnitude_source              3574 non-null object\n","status                        3574 non-null object\n","dtypes: datetime64[ns](1), float64(12), object(8)\n","memory usage: 614.3+ KB\n"],"name":"stdout"}]},{"metadata":{"id":"rLD2JO8diG1K","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":436},"outputId":"366c39aa-e106-445b-8003-0b2d552ed6cc","executionInfo":{"status":"ok","timestamp":1540795412107,"user_tz":180,"elapsed":2416,"user":{"displayName":"natalia brito","photoUrl":"https://lh5.googleusercontent.com/-R88XQR2c4H4/AAAAAAAAAAI/AAAAAAAAANs/MrBMmeqpMNE/s64/photo.jpg","userId":"00706747172851300870"}}},"cell_type":"code","source":["# Trabalhando com o reverse_geocoder:\n","\n","import reverse_geocoder as rg\n","\n","#Criando coluna com as coordenadas\n","coordinate = []\n","for lat, long in zip(tm2010_2016['latitude'], tm2010_2016['longitude']):\n","  lat_long = (lat, long)\n","  coordinate.append(lat_long)\n","\n","tm2010_2016[\"coordinate\"] = coordinate\n","result_paises = rg.search(coordinate)\n","\n","#Criando coluna com os country codes\n","country_code_2let = [dict['cc'] for dict in result_paises]\n","tm2010_2016[\"country_code_2let\"] = country_code_2let\n","\n","tm2010_2016[\"country_code_2let\"].head()"],"execution_count":15,"outputs":[{"output_type":"stream","text":["/usr/local/lib/python3.6/dist-packages/ipykernel_launcher.py:10: SettingWithCopyWarning:\n","\n","\n","A value is trying to be set on a copy of a slice from a DataFrame.\n","Try using .loc[row_indexer,col_indexer] = value instead\n","\n","See the caveats in the documentation: http://pandas.pydata.org/pandas-docs/stable/indexing.html#indexing-view-versus-copy\n","\n"],"name":"stderr"},{"output_type":"stream","text":["Loading formatted geocoded file...\n"],"name":"stdout"},{"output_type":"stream","text":["/usr/local/lib/python3.6/dist-packages/ipykernel_launcher.py:15: SettingWithCopyWarning:\n","\n","\n","A value is trying to be set on a copy of a slice from a DataFrame.\n","Try using .loc[row_indexer,col_indexer] = value instead\n","\n","See the caveats in the documentation: http://pandas.pydata.org/pandas-docs/stable/indexing.html#indexing-view-versus-copy\n","\n"],"name":"stderr"},{"output_type":"execute_result","data":{"text/plain":["19838    GU\n","19839    PG\n","19840    PE\n","19841    SB\n","19842    SB\n","Name: country_code_2let, dtype: object"]},"metadata":{"tags":[]},"execution_count":15}]},{"metadata":{"id":"LwID0a4EiLpO","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":325},"outputId":"649e7d73-0426-430d-ea52-79ea054fbd41","executionInfo":{"status":"ok","timestamp":1540795417836,"user_tz":180,"elapsed":647,"user":{"displayName":"natalia brito","photoUrl":"https://lh5.googleusercontent.com/-R88XQR2c4H4/AAAAAAAAAAI/AAAAAAAAANs/MrBMmeqpMNE/s64/photo.jpg","userId":"00706747172851300870"}}},"cell_type":"code","source":["# changing country code from 2-letter to 3-letter format\n","# from: https://github.com/gsnaveen/plotly-worldmap-mapping-2letter-CountryCode-to-3letter-country-code\n","dfcountry = pd.read_csv('countryMap.txt',sep='\\t')\n","tm2010_2016 = tm2010_2016.merge(dfcountry,how='inner',left_on=['country_code_2let'],right_on=['2let'])\n","tm2010_2016.head()"],"execution_count":16,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>date</th>\n","      <th>time</th>\n","      <th>latitude</th>\n","      <th>longitude</th>\n","      <th>type</th>\n","      <th>depth</th>\n","      <th>depth_error</th>\n","      <th>depth_seismic_stations</th>\n","      <th>magnitude</th>\n","      <th>magnitude_type</th>\n","      <th>...</th>\n","      <th>id</th>\n","      <th>source</th>\n","      <th>location_source</th>\n","      <th>magnitude_source</th>\n","      <th>status</th>\n","      <th>coordinate</th>\n","      <th>country_code_2let</th>\n","      <th>Countrylet</th>\n","      <th>2let</th>\n","      <th>3let</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>2010-01-02</td>\n","      <td>08:45:33</td>\n","      <td>12.424</td>\n","      <td>141.949</td>\n","      <td>Earthquake</td>\n","      <td>8.0</td>\n","      <td>NaN</td>\n","      <td>234.0</td>\n","      <td>6.1</td>\n","      <td>MWB</td>\n","      <td>...</td>\n","      <td>USP000H5M6</td>\n","      <td>US</td>\n","      <td>US</td>\n","      <td>US</td>\n","      <td>Reviewed</td>\n","      <td>(12.424000000000001, 141.94899999999998)</td>\n","      <td>GU</td>\n","      <td>Guam</td>\n","      <td>GU</td>\n","      <td>GUM</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2010-07-10</td>\n","      <td>05:39:43</td>\n","      <td>14.006</td>\n","      <td>145.026</td>\n","      <td>Earthquake</td>\n","      <td>136.0</td>\n","      <td>NaN</td>\n","      <td>271.0</td>\n","      <td>5.6</td>\n","      <td>MWC</td>\n","      <td>...</td>\n","      <td>USP000HF3F</td>\n","      <td>US</td>\n","      <td>US</td>\n","      <td>GCMT</td>\n","      <td>Reviewed</td>\n","      <td>(14.005999999999998, 145.026)</td>\n","      <td>GU</td>\n","      <td>Guam</td>\n","      <td>GU</td>\n","      <td>GUM</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>2010-07-10</td>\n","      <td>11:43:33</td>\n","      <td>11.143</td>\n","      <td>145.999</td>\n","      <td>Earthquake</td>\n","      <td>13.0</td>\n","      <td>NaN</td>\n","      <td>443.0</td>\n","      <td>6.3</td>\n","      <td>MWC</td>\n","      <td>...</td>\n","      <td>USP000HF3T</td>\n","      <td>US</td>\n","      <td>US</td>\n","      <td>US</td>\n","      <td>Reviewed</td>\n","      <td>(11.142999999999999, 145.999)</td>\n","      <td>GU</td>\n","      <td>Guam</td>\n","      <td>GU</td>\n","      <td>GUM</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>2010-08-23</td>\n","      <td>01:08:09</td>\n","      <td>12.805</td>\n","      <td>143.558</td>\n","      <td>Earthquake</td>\n","      <td>116.0</td>\n","      <td>NaN</td>\n","      <td>288.0</td>\n","      <td>5.5</td>\n","      <td>MWB</td>\n","      <td>...</td>\n","      <td>USP000HJMY</td>\n","      <td>US</td>\n","      <td>US</td>\n","      <td>US</td>\n","      <td>Reviewed</td>\n","      <td>(12.805, 143.558)</td>\n","      <td>GU</td>\n","      <td>Guam</td>\n","      <td>GU</td>\n","      <td>GUM</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>2011-05-13</td>\n","      <td>01:04:37</td>\n","      <td>12.434</td>\n","      <td>143.987</td>\n","      <td>Earthquake</td>\n","      <td>5.8</td>\n","      <td>13.1</td>\n","      <td>317.0</td>\n","      <td>5.5</td>\n","      <td>MWW</td>\n","      <td>...</td>\n","      <td>USP000J1GR</td>\n","      <td>US</td>\n","      <td>US</td>\n","      <td>US</td>\n","      <td>Reviewed</td>\n","      <td>(12.434000000000001, 143.987)</td>\n","      <td>GU</td>\n","      <td>Guam</td>\n","      <td>GU</td>\n","      <td>GUM</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>5 rows × 26 columns</p>\n","</div>"],"text/plain":["        date      time  latitude  longitude        type  depth  depth_error  \\\n","0 2010-01-02  08:45:33    12.424    141.949  Earthquake    8.0          NaN   \n","1 2010-07-10  05:39:43    14.006    145.026  Earthquake  136.0          NaN   \n","2 2010-07-10  11:43:33    11.143    145.999  Earthquake   13.0          NaN   \n","3 2010-08-23  01:08:09    12.805    143.558  Earthquake  116.0          NaN   \n","4 2011-05-13  01:04:37    12.434    143.987  Earthquake    5.8         13.1   \n","\n","   depth_seismic_stations  magnitude magnitude_type ...           id  source  \\\n","0                   234.0        6.1            MWB ...   USP000H5M6      US   \n","1                   271.0        5.6            MWC ...   USP000HF3F      US   \n","2                   443.0        6.3            MWC ...   USP000HF3T      US   \n","3                   288.0        5.5            MWB ...   USP000HJMY      US   \n","4                   317.0        5.5            MWW ...   USP000J1GR      US   \n","\n","   location_source  magnitude_source    status  \\\n","0               US                US  Reviewed   \n","1               US              GCMT  Reviewed   \n","2               US                US  Reviewed   \n","3               US                US  Reviewed   \n","4               US                US  Reviewed   \n","\n","                                 coordinate country_code_2let Countrylet 2let  \\\n","0  (12.424000000000001, 141.94899999999998)                GU       Guam   GU   \n","1             (14.005999999999998, 145.026)                GU       Guam   GU   \n","2             (11.142999999999999, 145.999)                GU       Guam   GU   \n","3                         (12.805, 143.558)                GU       Guam   GU   \n","4             (12.434000000000001, 143.987)                GU       Guam   GU   \n","\n","  3let  \n","0  GUM  \n","1  GUM  \n","2  GUM  \n","3  GUM  \n","4  GUM  \n","\n","[5 rows x 26 columns]"]},"metadata":{"tags":[]},"execution_count":16}]},{"metadata":{"id":"ypfLycwqiXZc","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":206},"outputId":"52692b35-5b05-4e23-baa1-8a38f5900cd0","executionInfo":{"status":"ok","timestamp":1540795420794,"user_tz":180,"elapsed":555,"user":{"displayName":"natalia brito","photoUrl":"https://lh5.googleusercontent.com/-R88XQR2c4H4/AAAAAAAAAAI/AAAAAAAAANs/MrBMmeqpMNE/s64/photo.jpg","userId":"00706747172851300870"}}},"cell_type":"code","source":["# create a new dataframe from series\n","df_country = tm2010_2016['3let'].value_counts().to_frame()\n","\n","# number of entries\n","entries = df_country.shape[0]\n","\n","# turn previous index into column \"code\"\n","df_country[\"CODE\"] = df_country.axes[0]\n","\n","# set new numeric index\n","new_dfc = df_country.set_axis([i for i in range(entries)],\n","                     axis='index',\n","                     inplace=False)\n","tm_country_2010_2016 = new_dfc.rename(index=str,\n","                               columns={\"3let\": \"QTD_TERREMOTOS\"})\n","tm_country_2010_2016.head()"],"execution_count":17,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>QTD_TERREMOTOS</th>\n","      <th>CODE</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>482</td>\n","      <td>JPN</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>329</td>\n","      <td>CHL</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>322</td>\n","      <td>IDN</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>284</td>\n","      <td>TON</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>225</td>\n","      <td>PNG</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["   QTD_TERREMOTOS CODE\n","0             482  JPN\n","1             329  CHL\n","2             322  IDN\n","3             284  TON\n","4             225  PNG"]},"metadata":{"tags":[]},"execution_count":17}]},{"metadata":{"id":"BsuCO-LKkLtk","colab_type":"text"},"cell_type":"markdown","source":["### Choropleth dos terremotos"]},{"metadata":{"id":"N-TWNpZKich8","colab_type":"code","colab":{"resources":{"http://localhost:8080/static/components/requirejs/require.js":{"data":"","ok":true,"headers":[["content-type","text/javascript"]],"status":200,"status_text":"OK"}},"base_uri":"https://localhost:8080/","height":542},"outputId":"e11f154e-0fa6-4aa2-a240-5e1987164b13","executionInfo":{"status":"ok","timestamp":1540795467187,"user_tz":180,"elapsed":574,"user":{"displayName":"natalia brito","photoUrl":"https://lh5.googleusercontent.com/-R88XQR2c4H4/AAAAAAAAAAI/AAAAAAAAANs/MrBMmeqpMNE/s64/photo.jpg","userId":"00706747172851300870"}}},"cell_type":"code","source":["# offline plotting with plotly\n","\n","df = tm_country_2010_2016\n","\n","data = [ dict(\n","        type = 'choropleth',\n","        locations = df['CODE'],\n","        z = df['QTD_TERREMOTOS'],\n","        text = df['CODE'],\n","        colorscale = [[0,\"rgb(5, 10, 172)\"],[0.35,\"rgb(40, 60, 190)\"],[0.5,\"rgb(70, 100, 245)\"],\\\n","            [0.6,\"rgb(90, 120, 245)\"],[0.7,\"rgb(106, 137, 247)\"],[1,\"rgb(220, 220, 220)\"]],\n","        autocolorscale = True,\n","        reversescale = False,\n","        marker = dict(\n","            line = dict (\n","                color = 'rgb(180,180,180)',\n","                width = 0.5\n","            ) ),\n","        colorbar = dict(\n","            autotick = True,\n","            title = 'Earthquakes<br>(qty.)'),\n","      ) ]\n","\n","layout = dict(\n","    title = 'Earthquakes from 2010 to 2016 <br>Source:\\\n","            <a href=\"https://www.kaggle.com/usgs/earthquake-database\">\\\n","            Kaggle</a>',\n","    geo = dict(\n","        showframe = True,\n","        showcoastlines = True,\n","        showcountries=True,\n","        projection = dict(\n","            type = 'Mercator'\n","        )\n","    )\n",")\n","\n","fig = dict( data=data, layout=layout )\n","\n","# Offline plotting\n","py.offline.init_notebook_mode(connected=True)\n","configure_plotly_browser_state()\n","py.offline.iplot( fig, validate=False, filename='d3-world-map' )"],"execution_count":18,"outputs":[{"output_type":"display_data","data":{"text/html":["<script>requirejs.config({paths: { 'plotly': ['https://cdn.plot.ly/plotly-latest.min']},});if(!window.Plotly) {{require(['plotly'],function(plotly) {window.Plotly=plotly;});}}</script>"],"text/plain":["<IPython.core.display.HTML object>"]},"metadata":{"tags":[]}},{"output_type":"display_data","data":{"text/html":["\n","        <script src=\"/static/components/requirejs/require.js\"></script>\n","        <script>\n","          requirejs.config({\n","            paths: {\n","              base: '/static/base',\n","              plotly: 'https://cdn.plot.ly/plotly-latest.min.js?noext',\n","            },\n","          });\n","        </script>\n","        "],"text/plain":["<IPython.core.display.HTML object>"]},"metadata":{"tags":[]}},{"output_type":"display_data","data":{"text/html":["<div id=\"9d487d2c-9c0d-42ab-b27c-173ee2ec8bff\" style=\"height: 525px; width: 100%;\" class=\"plotly-graph-div\"></div><script type=\"text/javascript\">require([\"plotly\"], function(Plotly) { window.PLOTLYENV=window.PLOTLYENV || {};window.PLOTLYENV.BASE_URL=\"https://plot.ly\";Plotly.newPlot(\"9d487d2c-9c0d-42ab-b27c-173ee2ec8bff\", [{\"type\": \"choropleth\", \"locations\": [\"JPN\", \"CHL\", \"IDN\", \"TON\", \"PNG\", \"SLB\", \"VUT\", \"USA\", \"RUS\", \"NZL\", \"MEX\", \"PHL\", \"SGS\", \"PCN\", \"PER\", \"AUS\", \"SHN\", \"ECU\", \"ARG\", \"WLF\", \"CHN\", \"MNP\", \"FJI\", \"IRN\", \"GTM\", \"TLS\", \"TWN\", \"IND\", \"GRC\", \"AFG\", \"CAN\", \"FSM\", \"ATA\", \"PAN\", \"NIC\", \"GUM\", \"BRA\", \"TUR\", \"SLV\", \"MDV\", \"ATF\", \"ZAF\", \"YEM\", \"CRI\", \"PAK\", \"COL\", \"PRT\", \"BOL\", \"MUS\", \"MMR\", \"NPL\", \"ITA\", \"ISL\", \"NCL\", \"HTI\", \"BRB\", \"GUF\", \"FLK\", \"TJK\", \"KGZ\", \"GLP\", \"GRL\", \"MDG\", \"REU\", \"ROU\", \"THA\", \"AZE\", \"CCK\", \"PYF\", \"CYM\", \"WSM\", \"CXR\", \"DOM\", \"RWA\", \"ERI\", \"ATG\", \"PRI\", \"DJI\", \"SJM\", \"VEN\", \"EGY\", \"DZA\", \"SRB\", \"MAR\", \"ZWE\", \"TTO\", \"LKA\", \"DMA\", \"BGR\", \"UZB\", \"NOR\", \"KAZ\", \"SAU\", \"MYS\", \"ESP\", \"TZA\", \"MTQ\", \"HND\", \"GEO\", \"PLW\", \"UGA\", \"CUB\"], \"z\": [482, 329, 322, 284, 225, 164, 151, 126, 119, 118, 101, 90, 83, 52, 46, 45, 44, 44, 39, 38, 36, 31, 30, 28, 26, 24, 24, 21, 21, 19, 17, 17, 16, 16, 15, 15, 15, 14, 14, 12, 12, 12, 11, 11, 11, 11, 11, 11, 10, 10, 9, 9, 8, 8, 7, 7, 7, 7, 6, 6, 5, 5, 5, 4, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], \"text\": [\"JPN\", \"CHL\", \"IDN\", \"TON\", \"PNG\", \"SLB\", \"VUT\", \"USA\", \"RUS\", \"NZL\", \"MEX\", \"PHL\", \"SGS\", \"PCN\", \"PER\", \"AUS\", \"SHN\", \"ECU\", \"ARG\", \"WLF\", \"CHN\", \"MNP\", \"FJI\", \"IRN\", \"GTM\", \"TLS\", \"TWN\", \"IND\", \"GRC\", \"AFG\", \"CAN\", \"FSM\", \"ATA\", \"PAN\", \"NIC\", \"GUM\", \"BRA\", \"TUR\", \"SLV\", \"MDV\", \"ATF\", \"ZAF\", \"YEM\", \"CRI\", \"PAK\", \"COL\", \"PRT\", \"BOL\", \"MUS\", \"MMR\", \"NPL\", \"ITA\", \"ISL\", \"NCL\", \"HTI\", \"BRB\", \"GUF\", \"FLK\", \"TJK\", \"KGZ\", \"GLP\", \"GRL\", \"MDG\", \"REU\", \"ROU\", \"THA\", \"AZE\", \"CCK\", \"PYF\", \"CYM\", \"WSM\", \"CXR\", \"DOM\", \"RWA\", \"ERI\", \"ATG\", \"PRI\", \"DJI\", \"SJM\", \"VEN\", \"EGY\", \"DZA\", \"SRB\", \"MAR\", \"ZWE\", \"TTO\", \"LKA\", \"DMA\", \"BGR\", \"UZB\", \"NOR\", \"KAZ\", \"SAU\", \"MYS\", \"ESP\", \"TZA\", \"MTQ\", \"HND\", \"GEO\", \"PLW\", \"UGA\", \"CUB\"], \"colorscale\": [[0, \"rgb(5, 10, 172)\"], [0.35, \"rgb(40, 60, 190)\"], [0.5, \"rgb(70, 100, 245)\"], [0.6, \"rgb(90, 120, 245)\"], [0.7, \"rgb(106, 137, 247)\"], [1, \"rgb(220, 220, 220)\"]], \"autocolorscale\": true, \"reversescale\": false, \"marker\": {\"line\": {\"color\": \"rgb(180,180,180)\", \"width\": 0.5}}, \"colorbar\": {\"autotick\": true, \"title\": \"Earthquakes<br>(qty.)\"}}], {\"title\": \"Earthquakes from 2010 to 2016 <br>Source:            <a href=\\\"https://www.kaggle.com/usgs/earthquake-database\\\">            Kaggle</a>\", \"geo\": {\"showframe\": true, \"showcoastlines\": true, \"showcountries\": true, \"projection\": {\"type\": \"Mercator\"}}}, {\"showLink\": true, \"linkText\": \"Export to plot.ly\"})});</script>"],"text/plain":["<IPython.core.display.HTML object>"]},"metadata":{"tags":[]}}]},{"metadata":{"id":"nDjal6RNJaJw","colab_type":"text"},"cell_type":"markdown","source":["Segundo o [Observatório terrestre de Cingapura](https://www.earthobservatory.sg/faq-on-earth-sciences/are-earthquakes-and-volcanic-eruptions-related-0), a sobreposição do mapa de vulcões ativos no mundo sobre um mapa dos terremotos durante os ultimos 30 anos, dá pra ver que eles casam perfeitamente, justamente por serem localizados nas áreas de atrito entre placas tectônicas. Entretanto, estes dois fenômenos não estão diretamente relacionados."]},{"metadata":{"id":"6sf5CnIzMdm8","colab_type":"text"},"cell_type":"markdown","source":["# Fontes\n","\n","- [Hype Science](https://hypescience.com/porque-ocorreram-tantos-grandes-terremotos-ultimamente/\n","https://brasilescola.uol.com.br/geografia/escala-richter.htm)\n","- [Reverse Geocoder](https://github.com/thampiman/reverse-geocoder)\n","- [Plotly](https://plot.ly/python/choropleth-maps/)"]}]}